program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.33.5"}, {"coremlc-version", "1877.40.3"}, {"coremltools-component-torch", "2.2.1"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.1"}})]
{
    func main<ios16>(tensor<int32, [1]> cache_length, tensor<fp16, [1, 224]> decoder_key_padding_mask, tensor<fp16, [1, 512, 1, 1500]> encoder_output_embeds, tensor<int32, [1]> input_ids, tensor<fp16, [1, 3072, 1, 224]> key_cache, tensor<fp16, [1, 224]> kv_cache_update_mask, tensor<fp16, [1, 3072, 1, 224]> value_cache) {
            tensor<int32, []> var_28_axis_0 = const()[name = tensor<string, []>("op_28_axis_0"), val = tensor<int32, []>(0)];
            tensor<int32, []> var_28_batch_dims_0 = const()[name = tensor<string, []>("op_28_batch_dims_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [51865, 512]> embed_tokens_weight_to_fp16 = const()[name = tensor<string, []>("embed_tokens_weight_to_fp16"), val = tensor<fp16, [51865, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [1, 512]> var_28_cast_fp16 = gather(axis = var_28_axis_0, batch_dims = var_28_batch_dims_0, indices = input_ids, x = embed_tokens_weight_to_fp16)[name = tensor<string, []>("op_28_cast_fp16")];
            tensor<int32, []> var_32_axis_0 = const()[name = tensor<string, []>("op_32_axis_0"), val = tensor<int32, []>(0)];
            tensor<int32, []> var_32_batch_dims_0 = const()[name = tensor<string, []>("op_32_batch_dims_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [448, 512]> embed_positions_weight_to_fp16 = const()[name = tensor<string, []>("embed_positions_weight_to_fp16"), val = tensor<fp16, [448, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53109888)))];
            tensor<fp16, [1, 512]> var_32_cast_fp16 = gather(axis = var_32_axis_0, batch_dims = var_32_batch_dims_0, indices = cache_length, x = embed_positions_weight_to_fp16)[name = tensor<string, []>("op_32_cast_fp16")];
            tensor<fp16, [1, 512]> hidden_states_1_cast_fp16 = add(x = var_28_cast_fp16, y = var_32_cast_fp16)[name = tensor<string, []>("hidden_states_1_cast_fp16")];
            tensor<int32, [1]> var_46_axes_0 = const()[name = tensor<string, []>("op_46_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 512, 1]> var_46_cast_fp16 = expand_dims(axes = var_46_axes_0, x = hidden_states_1_cast_fp16)[name = tensor<string, []>("op_46_cast_fp16")];
            tensor<int32, [1]> inputs_1_axes_0 = const()[name = tensor<string, []>("inputs_1_axes_0"), val = tensor<int32, [1]>([3])];
            tensor<fp16, [1, 512, 1, 1]> inputs_1_cast_fp16 = expand_dims(axes = inputs_1_axes_0, x = var_46_cast_fp16)[name = tensor<string, []>("inputs_1_cast_fp16")];
            tensor<int32, [6]> tile_0 = const()[name = tensor<string, []>("tile_0"), val = tensor<int32, [6]>([512, 512, 512, 512, 512, 512])];
            tensor<int32, []> var_51_axis_0 = const()[name = tensor<string, []>("op_51_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 224]> var_51_cast_fp16_0, tensor<fp16, [1, 512, 1, 224]> var_51_cast_fp16_1, tensor<fp16, [1, 512, 1, 224]> var_51_cast_fp16_2, tensor<fp16, [1, 512, 1, 224]> var_51_cast_fp16_3, tensor<fp16, [1, 512, 1, 224]> var_51_cast_fp16_4, tensor<fp16, [1, 512, 1, 224]> var_51_cast_fp16_5 = split(axis = var_51_axis_0, split_sizes = tile_0, x = key_cache)[name = tensor<string, []>("op_51_cast_fp16")];
            tensor<int32, [6]> tile_1 = const()[name = tensor<string, []>("tile_1"), val = tensor<int32, [6]>([512, 512, 512, 512, 512, 512])];
            tensor<int32, []> var_60_axis_0 = const()[name = tensor<string, []>("op_60_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 224]> var_60_cast_fp16_0, tensor<fp16, [1, 512, 1, 224]> var_60_cast_fp16_1, tensor<fp16, [1, 512, 1, 224]> var_60_cast_fp16_2, tensor<fp16, [1, 512, 1, 224]> var_60_cast_fp16_3, tensor<fp16, [1, 512, 1, 224]> var_60_cast_fp16_4, tensor<fp16, [1, 512, 1, 224]> var_60_cast_fp16_5 = split(axis = var_60_axis_0, split_sizes = tile_1, x = value_cache)[name = tensor<string, []>("op_60_cast_fp16")];
            tensor<int32, []> var_72 = const()[name = tensor<string, []>("op_72"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_79 = const()[name = tensor<string, []>("op_79"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_80 = const()[name = tensor<string, []>("op_80"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_92 = const()[name = tensor<string, []>("op_92"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_1_cast_fp16 = reduce_mean(axes = var_92, keep_dims = var_80, x = inputs_1_cast_fp16)[name = tensor<string, []>("channels_mean_1_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_1_cast_fp16 = sub(x = inputs_1_cast_fp16, y = channels_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_1_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = zero_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_sq_1_cast_fp16")];
            tensor<int32, [1]> var_96 = const()[name = tensor<string, []>("op_96"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_97_cast_fp16 = reduce_mean(axes = var_96, keep_dims = var_80, x = zero_mean_sq_1_cast_fp16)[name = tensor<string, []>("op_97_cast_fp16")];
            tensor<fp16, []> var_98_to_fp16 = const()[name = tensor<string, []>("op_98_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_99_cast_fp16 = add(x = var_97_cast_fp16, y = var_98_to_fp16)[name = tensor<string, []>("op_99_cast_fp16")];
            tensor<fp16, []> denom_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_1_cast_fp16 = rsqrt(epsilon = denom_1_epsilon_0_to_fp16, x = var_99_cast_fp16)[name = tensor<string, []>("denom_1_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = denom_1_cast_fp16)[name = tensor<string, []>("out_1_cast_fp16")];
            tensor<fp16, [512]> obj_1_mean_0_to_fp16 = const()[name = tensor<string, []>("obj_1_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53568704)))];
            tensor<fp16, [512]> obj_1_variance_0_to_fp16 = const()[name = tensor<string, []>("obj_1_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53569792)))];
            tensor<fp16, [512]> obj_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_1_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53570880)))];
            tensor<fp16, [512]> obj_1_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_1_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53571968)))];
            tensor<fp16, []> obj_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_1_cast_fp16 = batch_norm(beta = obj_1_beta_0_to_fp16, epsilon = obj_1_epsilon_0_to_fp16, gamma = obj_1_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_1_cast_fp16)[name = tensor<string, []>("obj_1_cast_fp16")];
            tensor<int32, [2]> var_114 = const()[name = tensor<string, []>("op_114"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_116 = const()[name = tensor<string, []>("op_116"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_1_pad_type_0 = const()[name = tensor<string, []>("query_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_1_pad_0 = const()[name = tensor<string, []>("query_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_0_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53573056)))];
            tensor<fp16, [512]> layers_0_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54097408)))];
            tensor<fp16, [1, 512, 1, 1]> query_1_cast_fp16 = conv(bias = layers_0_self_attn_q_proj_bias_to_fp16, dilations = var_116, groups = var_79, pad = query_1_pad_0, pad_type = query_1_pad_type_0, strides = var_114, weight = layers_0_self_attn_q_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("query_1_cast_fp16")];
            tensor<int32, [2]> var_120 = const()[name = tensor<string, []>("op_120"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_122 = const()[name = tensor<string, []>("op_122"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_1_pad_type_0 = const()[name = tensor<string, []>("current_key_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_1_pad_0 = const()[name = tensor<string, []>("current_key_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_0_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54098496)))];
            tensor<fp16, [1, 512, 1, 1]> current_key_1_cast_fp16 = conv(dilations = var_122, groups = var_79, pad = current_key_1_pad_0, pad_type = current_key_1_pad_type_0, strides = var_120, weight = layers_0_self_attn_k_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("current_key_1_cast_fp16")];
            tensor<int32, [2]> var_127 = const()[name = tensor<string, []>("op_127"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_129 = const()[name = tensor<string, []>("op_129"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_1_pad_type_0 = const()[name = tensor<string, []>("current_value_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_1_pad_0 = const()[name = tensor<string, []>("current_value_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_0_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54622848)))];
            tensor<fp16, [512]> layers_0_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55147200)))];
            tensor<fp16, [1, 512, 1, 1]> current_value_1_cast_fp16 = conv(bias = layers_0_self_attn_v_proj_bias_to_fp16, dilations = var_129, groups = var_79, pad = current_value_1_pad_0, pad_type = current_value_1_pad_type_0, strides = var_127, weight = layers_0_self_attn_v_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("current_value_1_cast_fp16")];
            tensor<int32, [1]> var_133_axes_0 = const()[name = tensor<string, []>("op_133_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 224]> var_133_cast_fp16 = expand_dims(axes = var_133_axes_0, x = kv_cache_update_mask)[name = tensor<string, []>("op_133_cast_fp16")];
            tensor<int32, [1]> var_134_axes_0 = const()[name = tensor<string, []>("op_134_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1, 1, 224]> var_134_cast_fp16 = expand_dims(axes = var_134_axes_0, x = var_133_cast_fp16)[name = tensor<string, []>("op_134_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_136_cast_fp16 = mul(x = current_key_1_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_136_cast_fp16")];
            tensor<fp16, []> var_73_to_fp16 = const()[name = tensor<string, []>("op_73_to_fp16"), val = tensor<fp16, []>(0x1p+0)];
            tensor<fp16, [1, 1, 1, 224]> var_137_cast_fp16 = sub(x = var_73_to_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_137_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_138_cast_fp16 = mul(x = var_51_cast_fp16_0, y = var_137_cast_fp16)[name = tensor<string, []>("op_138_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> key_1_cast_fp16 = add(x = var_136_cast_fp16, y = var_138_cast_fp16)[name = tensor<string, []>("key_1_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_140_cast_fp16 = mul(x = current_value_1_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_140_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_142_cast_fp16 = mul(x = var_60_cast_fp16_0, y = var_137_cast_fp16)[name = tensor<string, []>("op_142_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> value_1_cast_fp16 = add(x = var_140_cast_fp16, y = var_142_cast_fp16)[name = tensor<string, []>("value_1_cast_fp16")];
            tensor<int32, [4]> var_145 = const()[name = tensor<string, []>("op_145"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_146_cast_fp16 = reshape(shape = var_145, x = query_1_cast_fp16)[name = tensor<string, []>("op_146_cast_fp16")];
            tensor<fp16, []> var_147_to_fp16 = const()[name = tensor<string, []>("op_147_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_148_cast_fp16 = mul(x = var_146_cast_fp16, y = var_147_to_fp16)[name = tensor<string, []>("op_148_cast_fp16")];
            tensor<int32, [4]> var_149 = const()[name = tensor<string, []>("op_149"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_150_cast_fp16 = reshape(shape = var_149, x = key_1_cast_fp16)[name = tensor<string, []>("op_150_cast_fp16")];
            tensor<bool, []> mh_w_1_transpose_x_0 = const()[name = tensor<string, []>("mh_w_1_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_1_transpose_y_0 = const()[name = tensor<string, []>("mh_w_1_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 224]> mh_w_1_cast_fp16 = matmul(transpose_x = mh_w_1_transpose_x_0, transpose_y = mh_w_1_transpose_y_0, x = var_148_cast_fp16, y = var_150_cast_fp16)[name = tensor<string, []>("mh_w_1_cast_fp16")];
            tensor<int32, [1]> var_154_axes_0 = const()[name = tensor<string, []>("op_154_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 224]> var_154_cast_fp16 = expand_dims(axes = var_154_axes_0, x = decoder_key_padding_mask)[name = tensor<string, []>("op_154_cast_fp16")];
            tensor<int32, [1]> var_155_axes_0 = const()[name = tensor<string, []>("op_155_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1, 1, 224]> var_155_cast_fp16 = expand_dims(axes = var_155_axes_0, x = var_154_cast_fp16)[name = tensor<string, []>("op_155_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> mh_w_3_cast_fp16 = add(x = mh_w_1_cast_fp16, y = var_155_cast_fp16)[name = tensor<string, []>("mh_w_3_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> var_158_cast_fp16 = softmax(axis = var_72, x = mh_w_3_cast_fp16)[name = tensor<string, []>("op_158_cast_fp16")];
            tensor<int32, [4]> var_159 = const()[name = tensor<string, []>("op_159"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_160_cast_fp16 = reshape(shape = var_159, x = value_1_cast_fp16)[name = tensor<string, []>("op_160_cast_fp16")];
            tensor<bool, []> attn_1_transpose_x_0 = const()[name = tensor<string, []>("attn_1_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_1_transpose_y_0 = const()[name = tensor<string, []>("attn_1_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_1_cast_fp16 = matmul(transpose_x = attn_1_transpose_x_0, transpose_y = attn_1_transpose_y_0, x = var_160_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("attn_1_cast_fp16")];
            tensor<int32, [4]> var_163 = const()[name = tensor<string, []>("op_163"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_1_cast_fp16 = reshape(shape = var_163, x = attn_1_cast_fp16)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<int32, [2]> var_167 = const()[name = tensor<string, []>("op_167"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_169 = const()[name = tensor<string, []>("op_169"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_7_pad_type_0 = const()[name = tensor<string, []>("obj_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_7_pad_0 = const()[name = tensor<string, []>("obj_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_0_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55148288)))];
            tensor<fp16, [512]> layers_0_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55672640)))];
            tensor<fp16, [1, 512, 1, 1]> obj_7_cast_fp16 = conv(bias = layers_0_self_attn_o_proj_bias_to_fp16, dilations = var_169, groups = var_79, pad = obj_7_pad_0, pad_type = obj_7_pad_type_0, strides = var_167, weight = layers_0_self_attn_o_proj_weight_to_fp16, x = input_1_cast_fp16)[name = tensor<string, []>("obj_7_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_3_cast_fp16 = add(x = inputs_1_cast_fp16, y = obj_7_cast_fp16)[name = tensor<string, []>("inputs_3_cast_fp16")];
            tensor<int32, [1]> var_179 = const()[name = tensor<string, []>("op_179"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_3_cast_fp16 = reduce_mean(axes = var_179, keep_dims = var_80, x = inputs_3_cast_fp16)[name = tensor<string, []>("channels_mean_3_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_3_cast_fp16 = sub(x = inputs_3_cast_fp16, y = channels_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_3_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = zero_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_sq_3_cast_fp16")];
            tensor<int32, [1]> var_183 = const()[name = tensor<string, []>("op_183"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_184_cast_fp16 = reduce_mean(axes = var_183, keep_dims = var_80, x = zero_mean_sq_3_cast_fp16)[name = tensor<string, []>("op_184_cast_fp16")];
            tensor<fp16, []> var_185_to_fp16 = const()[name = tensor<string, []>("op_185_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_186_cast_fp16 = add(x = var_184_cast_fp16, y = var_185_to_fp16)[name = tensor<string, []>("op_186_cast_fp16")];
            tensor<fp16, []> denom_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_3_cast_fp16 = rsqrt(epsilon = denom_3_epsilon_0_to_fp16, x = var_186_cast_fp16)[name = tensor<string, []>("denom_3_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = denom_3_cast_fp16)[name = tensor<string, []>("out_3_cast_fp16")];
            tensor<fp16, [512]> obj_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_9_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55673728)))];
            tensor<fp16, [512]> obj_9_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_9_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55674816)))];
            tensor<fp16, []> obj_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_9_cast_fp16 = batch_norm(beta = obj_9_beta_0_to_fp16, epsilon = obj_9_epsilon_0_to_fp16, gamma = obj_9_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_3_cast_fp16)[name = tensor<string, []>("obj_9_cast_fp16")];
            tensor<int32, [2]> var_201 = const()[name = tensor<string, []>("op_201"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_203 = const()[name = tensor<string, []>("op_203"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_3_pad_type_0 = const()[name = tensor<string, []>("query_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_3_pad_0 = const()[name = tensor<string, []>("query_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_0_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55675904)))];
            tensor<fp16, [512]> layers_0_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56200256)))];
            tensor<fp16, [1, 512, 1, 1]> query_3_cast_fp16 = conv(bias = layers_0_encoder_attn_q_proj_bias_to_fp16, dilations = var_203, groups = var_79, pad = query_3_pad_0, pad_type = query_3_pad_type_0, strides = var_201, weight = layers_0_encoder_attn_q_proj_weight_to_fp16, x = obj_9_cast_fp16)[name = tensor<string, []>("query_3_cast_fp16")];
            tensor<int32, [2]> var_207 = const()[name = tensor<string, []>("op_207"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_209 = const()[name = tensor<string, []>("op_209"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_3_pad_type_0 = const()[name = tensor<string, []>("key_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_3_pad_0 = const()[name = tensor<string, []>("key_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_0_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56201344)))];
            tensor<fp16, [1, 512, 1, 1500]> key_3_cast_fp16 = conv(dilations = var_209, groups = var_79, pad = key_3_pad_0, pad_type = key_3_pad_type_0, strides = var_207, weight = layers_0_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_3_cast_fp16")];
            tensor<int32, [2]> var_214 = const()[name = tensor<string, []>("op_214"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_216 = const()[name = tensor<string, []>("op_216"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_3_pad_type_0 = const()[name = tensor<string, []>("value_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_3_pad_0 = const()[name = tensor<string, []>("value_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_0_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56725696)))];
            tensor<fp16, [512]> layers_0_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57250048)))];
            tensor<fp16, [1, 512, 1, 1500]> value_3_cast_fp16 = conv(bias = layers_0_encoder_attn_v_proj_bias_to_fp16, dilations = var_216, groups = var_79, pad = value_3_pad_0, pad_type = value_3_pad_type_0, strides = var_214, weight = layers_0_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_3_cast_fp16")];
            tensor<int32, [4]> var_220 = const()[name = tensor<string, []>("op_220"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_221_cast_fp16 = reshape(shape = var_220, x = query_3_cast_fp16)[name = tensor<string, []>("op_221_cast_fp16")];
            tensor<fp16, []> var_222_to_fp16 = const()[name = tensor<string, []>("op_222_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_223_cast_fp16 = mul(x = var_221_cast_fp16, y = var_222_to_fp16)[name = tensor<string, []>("op_223_cast_fp16")];
            tensor<int32, [4]> var_224 = const()[name = tensor<string, []>("op_224"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_225_cast_fp16 = reshape(shape = var_224, x = key_3_cast_fp16)[name = tensor<string, []>("op_225_cast_fp16")];
            tensor<bool, []> mh_w_5_transpose_x_0 = const()[name = tensor<string, []>("mh_w_5_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_5_transpose_y_0 = const()[name = tensor<string, []>("mh_w_5_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 1500]> mh_w_5_cast_fp16 = matmul(transpose_x = mh_w_5_transpose_x_0, transpose_y = mh_w_5_transpose_y_0, x = var_223_cast_fp16, y = var_225_cast_fp16)[name = tensor<string, []>("mh_w_5_cast_fp16")];
            tensor<fp16, [1, 8, 1, 1500]> obj_13_cast_fp16 = softmax(axis = var_72, x = mh_w_5_cast_fp16)[name = tensor<string, []>("obj_13_cast_fp16")];
            tensor<int32, [4]> var_229 = const()[name = tensor<string, []>("op_229"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_230_cast_fp16 = reshape(shape = var_229, x = value_3_cast_fp16)[name = tensor<string, []>("op_230_cast_fp16")];
            tensor<bool, []> attn_3_transpose_x_0 = const()[name = tensor<string, []>("attn_3_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_3_transpose_y_0 = const()[name = tensor<string, []>("attn_3_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_3_cast_fp16 = matmul(transpose_x = attn_3_transpose_x_0, transpose_y = attn_3_transpose_y_0, x = var_230_cast_fp16, y = obj_13_cast_fp16)[name = tensor<string, []>("attn_3_cast_fp16")];
            tensor<int32, [4]> var_233 = const()[name = tensor<string, []>("op_233"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_3_cast_fp16 = reshape(shape = var_233, x = attn_3_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, [2]> var_237 = const()[name = tensor<string, []>("op_237"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_239 = const()[name = tensor<string, []>("op_239"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_11_pad_type_0 = const()[name = tensor<string, []>("obj_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_11_pad_0 = const()[name = tensor<string, []>("obj_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_0_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57251136)))];
            tensor<fp16, [512]> layers_0_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57775488)))];
            tensor<fp16, [1, 512, 1, 1]> obj_11_cast_fp16 = conv(bias = layers_0_encoder_attn_o_proj_bias_to_fp16, dilations = var_239, groups = var_79, pad = obj_11_pad_0, pad_type = obj_11_pad_type_0, strides = var_237, weight = layers_0_encoder_attn_o_proj_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("obj_11_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_5_cast_fp16 = add(x = inputs_3_cast_fp16, y = obj_11_cast_fp16)[name = tensor<string, []>("inputs_5_cast_fp16")];
            tensor<int32, [1]> var_245 = const()[name = tensor<string, []>("op_245"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_5_cast_fp16 = reduce_mean(axes = var_245, keep_dims = var_80, x = inputs_5_cast_fp16)[name = tensor<string, []>("channels_mean_5_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_5_cast_fp16 = sub(x = inputs_5_cast_fp16, y = channels_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_5_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = zero_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_sq_5_cast_fp16")];
            tensor<int32, [1]> var_249 = const()[name = tensor<string, []>("op_249"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_250_cast_fp16 = reduce_mean(axes = var_249, keep_dims = var_80, x = zero_mean_sq_5_cast_fp16)[name = tensor<string, []>("op_250_cast_fp16")];
            tensor<fp16, []> var_251_to_fp16 = const()[name = tensor<string, []>("op_251_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_252_cast_fp16 = add(x = var_250_cast_fp16, y = var_251_to_fp16)[name = tensor<string, []>("op_252_cast_fp16")];
            tensor<fp16, []> denom_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_5_cast_fp16 = rsqrt(epsilon = denom_5_epsilon_0_to_fp16, x = var_252_cast_fp16)[name = tensor<string, []>("denom_5_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = denom_5_cast_fp16)[name = tensor<string, []>("out_5_cast_fp16")];
            tensor<fp16, [512]> input_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_5_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57776576)))];
            tensor<fp16, [512]> input_5_beta_0_to_fp16 = const()[name = tensor<string, []>("input_5_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57777664)))];
            tensor<fp16, []> input_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> input_5_cast_fp16 = batch_norm(beta = input_5_beta_0_to_fp16, epsilon = input_5_epsilon_0_to_fp16, gamma = input_5_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_5_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<int32, [2]> var_263 = const()[name = tensor<string, []>("op_263"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_265 = const()[name = tensor<string, []>("op_265"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> layers_0_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_weight_to_fp16"), val = tensor<fp16, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57778752)))];
            tensor<fp16, [2048]> layers_0_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59875968)))];
            tensor<fp16, [1, 2048, 1, 1]> input_7_cast_fp16 = conv(bias = layers_0_fc1_bias_to_fp16, dilations = var_265, groups = var_79, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_263, weight = layers_0_fc1_weight_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<string, []> input_9_mode_0 = const()[name = tensor<string, []>("input_9_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 2048, 1, 1]> input_9_cast_fp16 = gelu(mode = input_9_mode_0, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<int32, [2]> var_271 = const()[name = tensor<string, []>("op_271"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_273 = const()[name = tensor<string, []>("op_273"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_3_pad_type_0 = const()[name = tensor<string, []>("hidden_states_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_3_pad_0 = const()[name = tensor<string, []>("hidden_states_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> layers_0_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_weight_to_fp16"), val = tensor<fp16, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59880128)))];
            tensor<fp16, [512]> layers_0_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(61977344)))];
            tensor<fp16, [1, 512, 1, 1]> hidden_states_3_cast_fp16 = conv(bias = layers_0_fc2_bias_to_fp16, dilations = var_273, groups = var_79, pad = hidden_states_3_pad_0, pad_type = hidden_states_3_pad_type_0, strides = var_271, weight = layers_0_fc2_weight_to_fp16, x = input_9_cast_fp16)[name = tensor<string, []>("hidden_states_3_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_7_cast_fp16 = add(x = inputs_5_cast_fp16, y = hidden_states_3_cast_fp16)[name = tensor<string, []>("inputs_7_cast_fp16")];
            tensor<int32, []> var_286 = const()[name = tensor<string, []>("op_286"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_293 = const()[name = tensor<string, []>("op_293"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_294 = const()[name = tensor<string, []>("op_294"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_306 = const()[name = tensor<string, []>("op_306"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_7_cast_fp16 = reduce_mean(axes = var_306, keep_dims = var_294, x = inputs_7_cast_fp16)[name = tensor<string, []>("channels_mean_7_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_7_cast_fp16 = sub(x = inputs_7_cast_fp16, y = channels_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_7_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = zero_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_sq_7_cast_fp16")];
            tensor<int32, [1]> var_310 = const()[name = tensor<string, []>("op_310"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_311_cast_fp16 = reduce_mean(axes = var_310, keep_dims = var_294, x = zero_mean_sq_7_cast_fp16)[name = tensor<string, []>("op_311_cast_fp16")];
            tensor<fp16, []> var_312_to_fp16 = const()[name = tensor<string, []>("op_312_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_313_cast_fp16 = add(x = var_311_cast_fp16, y = var_312_to_fp16)[name = tensor<string, []>("op_313_cast_fp16")];
            tensor<fp16, []> denom_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_7_cast_fp16 = rsqrt(epsilon = denom_7_epsilon_0_to_fp16, x = var_313_cast_fp16)[name = tensor<string, []>("denom_7_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = denom_7_cast_fp16)[name = tensor<string, []>("out_7_cast_fp16")];
            tensor<fp16, [512]> obj_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_15_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(61978432)))];
            tensor<fp16, [512]> obj_15_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_15_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(61979520)))];
            tensor<fp16, []> obj_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_15_cast_fp16 = batch_norm(beta = obj_15_beta_0_to_fp16, epsilon = obj_15_epsilon_0_to_fp16, gamma = obj_15_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_7_cast_fp16)[name = tensor<string, []>("obj_15_cast_fp16")];
            tensor<int32, [2]> var_328 = const()[name = tensor<string, []>("op_328"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_330 = const()[name = tensor<string, []>("op_330"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_5_pad_type_0 = const()[name = tensor<string, []>("query_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_5_pad_0 = const()[name = tensor<string, []>("query_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_1_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(61980608)))];
            tensor<fp16, [512]> layers_1_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62504960)))];
            tensor<fp16, [1, 512, 1, 1]> query_5_cast_fp16 = conv(bias = layers_1_self_attn_q_proj_bias_to_fp16, dilations = var_330, groups = var_293, pad = query_5_pad_0, pad_type = query_5_pad_type_0, strides = var_328, weight = layers_1_self_attn_q_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("query_5_cast_fp16")];
            tensor<int32, [2]> var_334 = const()[name = tensor<string, []>("op_334"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_336 = const()[name = tensor<string, []>("op_336"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_3_pad_type_0 = const()[name = tensor<string, []>("current_key_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_3_pad_0 = const()[name = tensor<string, []>("current_key_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_1_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62506048)))];
            tensor<fp16, [1, 512, 1, 1]> current_key_3_cast_fp16 = conv(dilations = var_336, groups = var_293, pad = current_key_3_pad_0, pad_type = current_key_3_pad_type_0, strides = var_334, weight = layers_1_self_attn_k_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("current_key_3_cast_fp16")];
            tensor<int32, [2]> var_341 = const()[name = tensor<string, []>("op_341"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_343 = const()[name = tensor<string, []>("op_343"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_3_pad_type_0 = const()[name = tensor<string, []>("current_value_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_3_pad_0 = const()[name = tensor<string, []>("current_value_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_1_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63030400)))];
            tensor<fp16, [512]> layers_1_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63554752)))];
            tensor<fp16, [1, 512, 1, 1]> current_value_3_cast_fp16 = conv(bias = layers_1_self_attn_v_proj_bias_to_fp16, dilations = var_343, groups = var_293, pad = current_value_3_pad_0, pad_type = current_value_3_pad_type_0, strides = var_341, weight = layers_1_self_attn_v_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("current_value_3_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_350_cast_fp16 = mul(x = current_key_3_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_350_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_352_cast_fp16 = mul(x = var_51_cast_fp16_1, y = var_137_cast_fp16)[name = tensor<string, []>("op_352_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> key_5_cast_fp16 = add(x = var_350_cast_fp16, y = var_352_cast_fp16)[name = tensor<string, []>("key_5_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_354_cast_fp16 = mul(x = current_value_3_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_354_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_356_cast_fp16 = mul(x = var_60_cast_fp16_1, y = var_137_cast_fp16)[name = tensor<string, []>("op_356_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> value_5_cast_fp16 = add(x = var_354_cast_fp16, y = var_356_cast_fp16)[name = tensor<string, []>("value_5_cast_fp16")];
            tensor<int32, [4]> var_359 = const()[name = tensor<string, []>("op_359"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_360_cast_fp16 = reshape(shape = var_359, x = query_5_cast_fp16)[name = tensor<string, []>("op_360_cast_fp16")];
            tensor<fp16, []> var_361_to_fp16 = const()[name = tensor<string, []>("op_361_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_362_cast_fp16 = mul(x = var_360_cast_fp16, y = var_361_to_fp16)[name = tensor<string, []>("op_362_cast_fp16")];
            tensor<int32, [4]> var_363 = const()[name = tensor<string, []>("op_363"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_364_cast_fp16 = reshape(shape = var_363, x = key_5_cast_fp16)[name = tensor<string, []>("op_364_cast_fp16")];
            tensor<bool, []> mh_w_7_transpose_x_0 = const()[name = tensor<string, []>("mh_w_7_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_7_transpose_y_0 = const()[name = tensor<string, []>("mh_w_7_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 224]> mh_w_7_cast_fp16 = matmul(transpose_x = mh_w_7_transpose_x_0, transpose_y = mh_w_7_transpose_y_0, x = var_362_cast_fp16, y = var_364_cast_fp16)[name = tensor<string, []>("mh_w_7_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> mh_w_9_cast_fp16 = add(x = mh_w_7_cast_fp16, y = var_155_cast_fp16)[name = tensor<string, []>("mh_w_9_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> var_372_cast_fp16 = softmax(axis = var_286, x = mh_w_9_cast_fp16)[name = tensor<string, []>("op_372_cast_fp16")];
            tensor<int32, [4]> var_373 = const()[name = tensor<string, []>("op_373"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_374_cast_fp16 = reshape(shape = var_373, x = value_5_cast_fp16)[name = tensor<string, []>("op_374_cast_fp16")];
            tensor<bool, []> attn_5_transpose_x_0 = const()[name = tensor<string, []>("attn_5_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_5_transpose_y_0 = const()[name = tensor<string, []>("attn_5_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_5_cast_fp16 = matmul(transpose_x = attn_5_transpose_x_0, transpose_y = attn_5_transpose_y_0, x = var_374_cast_fp16, y = var_372_cast_fp16)[name = tensor<string, []>("attn_5_cast_fp16")];
            tensor<int32, [4]> var_377 = const()[name = tensor<string, []>("op_377"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_11_cast_fp16 = reshape(shape = var_377, x = attn_5_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<int32, [2]> var_381 = const()[name = tensor<string, []>("op_381"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_383 = const()[name = tensor<string, []>("op_383"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_21_pad_type_0 = const()[name = tensor<string, []>("obj_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_21_pad_0 = const()[name = tensor<string, []>("obj_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_1_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63555840)))];
            tensor<fp16, [512]> layers_1_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64080192)))];
            tensor<fp16, [1, 512, 1, 1]> obj_21_cast_fp16 = conv(bias = layers_1_self_attn_o_proj_bias_to_fp16, dilations = var_383, groups = var_293, pad = obj_21_pad_0, pad_type = obj_21_pad_type_0, strides = var_381, weight = layers_1_self_attn_o_proj_weight_to_fp16, x = input_11_cast_fp16)[name = tensor<string, []>("obj_21_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_9_cast_fp16 = add(x = inputs_7_cast_fp16, y = obj_21_cast_fp16)[name = tensor<string, []>("inputs_9_cast_fp16")];
            tensor<int32, [1]> var_393 = const()[name = tensor<string, []>("op_393"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_9_cast_fp16 = reduce_mean(axes = var_393, keep_dims = var_294, x = inputs_9_cast_fp16)[name = tensor<string, []>("channels_mean_9_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_9_cast_fp16 = sub(x = inputs_9_cast_fp16, y = channels_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_9_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = zero_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_sq_9_cast_fp16")];
            tensor<int32, [1]> var_397 = const()[name = tensor<string, []>("op_397"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_398_cast_fp16 = reduce_mean(axes = var_397, keep_dims = var_294, x = zero_mean_sq_9_cast_fp16)[name = tensor<string, []>("op_398_cast_fp16")];
            tensor<fp16, []> var_399_to_fp16 = const()[name = tensor<string, []>("op_399_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_400_cast_fp16 = add(x = var_398_cast_fp16, y = var_399_to_fp16)[name = tensor<string, []>("op_400_cast_fp16")];
            tensor<fp16, []> denom_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_9_cast_fp16 = rsqrt(epsilon = denom_9_epsilon_0_to_fp16, x = var_400_cast_fp16)[name = tensor<string, []>("denom_9_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = denom_9_cast_fp16)[name = tensor<string, []>("out_9_cast_fp16")];
            tensor<fp16, [512]> obj_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_23_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64081280)))];
            tensor<fp16, [512]> obj_23_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_23_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64082368)))];
            tensor<fp16, []> obj_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_23_cast_fp16 = batch_norm(beta = obj_23_beta_0_to_fp16, epsilon = obj_23_epsilon_0_to_fp16, gamma = obj_23_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_9_cast_fp16)[name = tensor<string, []>("obj_23_cast_fp16")];
            tensor<int32, [2]> var_415 = const()[name = tensor<string, []>("op_415"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_417 = const()[name = tensor<string, []>("op_417"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_7_pad_type_0 = const()[name = tensor<string, []>("query_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_7_pad_0 = const()[name = tensor<string, []>("query_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_1_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64083456)))];
            tensor<fp16, [512]> layers_1_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64607808)))];
            tensor<fp16, [1, 512, 1, 1]> query_7_cast_fp16 = conv(bias = layers_1_encoder_attn_q_proj_bias_to_fp16, dilations = var_417, groups = var_293, pad = query_7_pad_0, pad_type = query_7_pad_type_0, strides = var_415, weight = layers_1_encoder_attn_q_proj_weight_to_fp16, x = obj_23_cast_fp16)[name = tensor<string, []>("query_7_cast_fp16")];
            tensor<int32, [2]> var_421 = const()[name = tensor<string, []>("op_421"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_423 = const()[name = tensor<string, []>("op_423"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_7_pad_type_0 = const()[name = tensor<string, []>("key_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_7_pad_0 = const()[name = tensor<string, []>("key_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_1_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64608896)))];
            tensor<fp16, [1, 512, 1, 1500]> key_7_cast_fp16 = conv(dilations = var_423, groups = var_293, pad = key_7_pad_0, pad_type = key_7_pad_type_0, strides = var_421, weight = layers_1_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_7_cast_fp16")];
            tensor<int32, [2]> var_428 = const()[name = tensor<string, []>("op_428"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_430 = const()[name = tensor<string, []>("op_430"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_7_pad_type_0 = const()[name = tensor<string, []>("value_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_7_pad_0 = const()[name = tensor<string, []>("value_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_1_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65133248)))];
            tensor<fp16, [512]> layers_1_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65657600)))];
            tensor<fp16, [1, 512, 1, 1500]> value_7_cast_fp16 = conv(bias = layers_1_encoder_attn_v_proj_bias_to_fp16, dilations = var_430, groups = var_293, pad = value_7_pad_0, pad_type = value_7_pad_type_0, strides = var_428, weight = layers_1_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_7_cast_fp16")];
            tensor<int32, [4]> var_434 = const()[name = tensor<string, []>("op_434"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_435_cast_fp16 = reshape(shape = var_434, x = query_7_cast_fp16)[name = tensor<string, []>("op_435_cast_fp16")];
            tensor<fp16, []> var_436_to_fp16 = const()[name = tensor<string, []>("op_436_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_437_cast_fp16 = mul(x = var_435_cast_fp16, y = var_436_to_fp16)[name = tensor<string, []>("op_437_cast_fp16")];
            tensor<int32, [4]> var_438 = const()[name = tensor<string, []>("op_438"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_439_cast_fp16 = reshape(shape = var_438, x = key_7_cast_fp16)[name = tensor<string, []>("op_439_cast_fp16")];
            tensor<bool, []> mh_w_11_transpose_x_0 = const()[name = tensor<string, []>("mh_w_11_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_11_transpose_y_0 = const()[name = tensor<string, []>("mh_w_11_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 1500]> mh_w_11_cast_fp16 = matmul(transpose_x = mh_w_11_transpose_x_0, transpose_y = mh_w_11_transpose_y_0, x = var_437_cast_fp16, y = var_439_cast_fp16)[name = tensor<string, []>("mh_w_11_cast_fp16")];
            tensor<fp16, [1, 8, 1, 1500]> obj_27_cast_fp16 = softmax(axis = var_286, x = mh_w_11_cast_fp16)[name = tensor<string, []>("obj_27_cast_fp16")];
            tensor<int32, [4]> var_443 = const()[name = tensor<string, []>("op_443"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_444_cast_fp16 = reshape(shape = var_443, x = value_7_cast_fp16)[name = tensor<string, []>("op_444_cast_fp16")];
            tensor<bool, []> attn_7_transpose_x_0 = const()[name = tensor<string, []>("attn_7_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_7_transpose_y_0 = const()[name = tensor<string, []>("attn_7_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_7_cast_fp16 = matmul(transpose_x = attn_7_transpose_x_0, transpose_y = attn_7_transpose_y_0, x = var_444_cast_fp16, y = obj_27_cast_fp16)[name = tensor<string, []>("attn_7_cast_fp16")];
            tensor<int32, [4]> var_447 = const()[name = tensor<string, []>("op_447"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_13_cast_fp16 = reshape(shape = var_447, x = attn_7_cast_fp16)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<int32, [2]> var_451 = const()[name = tensor<string, []>("op_451"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_453 = const()[name = tensor<string, []>("op_453"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_25_pad_type_0 = const()[name = tensor<string, []>("obj_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_25_pad_0 = const()[name = tensor<string, []>("obj_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_1_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65658688)))];
            tensor<fp16, [512]> layers_1_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66183040)))];
            tensor<fp16, [1, 512, 1, 1]> obj_25_cast_fp16 = conv(bias = layers_1_encoder_attn_o_proj_bias_to_fp16, dilations = var_453, groups = var_293, pad = obj_25_pad_0, pad_type = obj_25_pad_type_0, strides = var_451, weight = layers_1_encoder_attn_o_proj_weight_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("obj_25_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_11_cast_fp16 = add(x = inputs_9_cast_fp16, y = obj_25_cast_fp16)[name = tensor<string, []>("inputs_11_cast_fp16")];
            tensor<int32, [1]> var_459 = const()[name = tensor<string, []>("op_459"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_11_cast_fp16 = reduce_mean(axes = var_459, keep_dims = var_294, x = inputs_11_cast_fp16)[name = tensor<string, []>("channels_mean_11_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_11_cast_fp16 = sub(x = inputs_11_cast_fp16, y = channels_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_11_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = zero_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_sq_11_cast_fp16")];
            tensor<int32, [1]> var_463 = const()[name = tensor<string, []>("op_463"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_464_cast_fp16 = reduce_mean(axes = var_463, keep_dims = var_294, x = zero_mean_sq_11_cast_fp16)[name = tensor<string, []>("op_464_cast_fp16")];
            tensor<fp16, []> var_465_to_fp16 = const()[name = tensor<string, []>("op_465_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_466_cast_fp16 = add(x = var_464_cast_fp16, y = var_465_to_fp16)[name = tensor<string, []>("op_466_cast_fp16")];
            tensor<fp16, []> denom_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_11_cast_fp16 = rsqrt(epsilon = denom_11_epsilon_0_to_fp16, x = var_466_cast_fp16)[name = tensor<string, []>("denom_11_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = denom_11_cast_fp16)[name = tensor<string, []>("out_11_cast_fp16")];
            tensor<fp16, [512]> input_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_15_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66184128)))];
            tensor<fp16, [512]> input_15_beta_0_to_fp16 = const()[name = tensor<string, []>("input_15_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66185216)))];
            tensor<fp16, []> input_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> input_15_cast_fp16 = batch_norm(beta = input_15_beta_0_to_fp16, epsilon = input_15_epsilon_0_to_fp16, gamma = input_15_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_11_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_477 = const()[name = tensor<string, []>("op_477"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_479 = const()[name = tensor<string, []>("op_479"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> layers_1_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_weight_to_fp16"), val = tensor<fp16, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66186304)))];
            tensor<fp16, [2048]> layers_1_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68283520)))];
            tensor<fp16, [1, 2048, 1, 1]> input_17_cast_fp16 = conv(bias = layers_1_fc1_bias_to_fp16, dilations = var_479, groups = var_293, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = var_477, weight = layers_1_fc1_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<string, []> input_19_mode_0 = const()[name = tensor<string, []>("input_19_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 2048, 1, 1]> input_19_cast_fp16 = gelu(mode = input_19_mode_0, x = input_17_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_485 = const()[name = tensor<string, []>("op_485"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_487 = const()[name = tensor<string, []>("op_487"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_5_pad_type_0 = const()[name = tensor<string, []>("hidden_states_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_5_pad_0 = const()[name = tensor<string, []>("hidden_states_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> layers_1_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_weight_to_fp16"), val = tensor<fp16, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68287680)))];
            tensor<fp16, [512]> layers_1_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70384896)))];
            tensor<fp16, [1, 512, 1, 1]> hidden_states_5_cast_fp16 = conv(bias = layers_1_fc2_bias_to_fp16, dilations = var_487, groups = var_293, pad = hidden_states_5_pad_0, pad_type = hidden_states_5_pad_type_0, strides = var_485, weight = layers_1_fc2_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("hidden_states_5_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_13_cast_fp16 = add(x = inputs_11_cast_fp16, y = hidden_states_5_cast_fp16)[name = tensor<string, []>("inputs_13_cast_fp16")];
            tensor<int32, []> var_500 = const()[name = tensor<string, []>("op_500"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_507 = const()[name = tensor<string, []>("op_507"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_508 = const()[name = tensor<string, []>("op_508"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_520 = const()[name = tensor<string, []>("op_520"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_13_cast_fp16 = reduce_mean(axes = var_520, keep_dims = var_508, x = inputs_13_cast_fp16)[name = tensor<string, []>("channels_mean_13_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_13_cast_fp16 = sub(x = inputs_13_cast_fp16, y = channels_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_13_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = zero_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_sq_13_cast_fp16")];
            tensor<int32, [1]> var_524 = const()[name = tensor<string, []>("op_524"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_525_cast_fp16 = reduce_mean(axes = var_524, keep_dims = var_508, x = zero_mean_sq_13_cast_fp16)[name = tensor<string, []>("op_525_cast_fp16")];
            tensor<fp16, []> var_526_to_fp16 = const()[name = tensor<string, []>("op_526_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_527_cast_fp16 = add(x = var_525_cast_fp16, y = var_526_to_fp16)[name = tensor<string, []>("op_527_cast_fp16")];
            tensor<fp16, []> denom_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_13_cast_fp16 = rsqrt(epsilon = denom_13_epsilon_0_to_fp16, x = var_527_cast_fp16)[name = tensor<string, []>("denom_13_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = denom_13_cast_fp16)[name = tensor<string, []>("out_13_cast_fp16")];
            tensor<fp16, [512]> obj_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_29_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70385984)))];
            tensor<fp16, [512]> obj_29_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_29_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70387072)))];
            tensor<fp16, []> obj_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_29_cast_fp16 = batch_norm(beta = obj_29_beta_0_to_fp16, epsilon = obj_29_epsilon_0_to_fp16, gamma = obj_29_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_13_cast_fp16)[name = tensor<string, []>("obj_29_cast_fp16")];
            tensor<int32, [2]> var_542 = const()[name = tensor<string, []>("op_542"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_544 = const()[name = tensor<string, []>("op_544"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_9_pad_type_0 = const()[name = tensor<string, []>("query_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_9_pad_0 = const()[name = tensor<string, []>("query_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_2_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70388160)))];
            tensor<fp16, [512]> layers_2_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70912512)))];
            tensor<fp16, [1, 512, 1, 1]> query_9_cast_fp16 = conv(bias = layers_2_self_attn_q_proj_bias_to_fp16, dilations = var_544, groups = var_507, pad = query_9_pad_0, pad_type = query_9_pad_type_0, strides = var_542, weight = layers_2_self_attn_q_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("query_9_cast_fp16")];
            tensor<int32, [2]> var_548 = const()[name = tensor<string, []>("op_548"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_550 = const()[name = tensor<string, []>("op_550"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_5_pad_type_0 = const()[name = tensor<string, []>("current_key_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_5_pad_0 = const()[name = tensor<string, []>("current_key_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_2_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70913600)))];
            tensor<fp16, [1, 512, 1, 1]> current_key_5_cast_fp16 = conv(dilations = var_550, groups = var_507, pad = current_key_5_pad_0, pad_type = current_key_5_pad_type_0, strides = var_548, weight = layers_2_self_attn_k_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("current_key_5_cast_fp16")];
            tensor<int32, [2]> var_555 = const()[name = tensor<string, []>("op_555"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_557 = const()[name = tensor<string, []>("op_557"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_5_pad_type_0 = const()[name = tensor<string, []>("current_value_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_5_pad_0 = const()[name = tensor<string, []>("current_value_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_2_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71437952)))];
            tensor<fp16, [512]> layers_2_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71962304)))];
            tensor<fp16, [1, 512, 1, 1]> current_value_5_cast_fp16 = conv(bias = layers_2_self_attn_v_proj_bias_to_fp16, dilations = var_557, groups = var_507, pad = current_value_5_pad_0, pad_type = current_value_5_pad_type_0, strides = var_555, weight = layers_2_self_attn_v_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("current_value_5_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_564_cast_fp16 = mul(x = current_key_5_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_564_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_566_cast_fp16 = mul(x = var_51_cast_fp16_2, y = var_137_cast_fp16)[name = tensor<string, []>("op_566_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> key_9_cast_fp16 = add(x = var_564_cast_fp16, y = var_566_cast_fp16)[name = tensor<string, []>("key_9_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_568_cast_fp16 = mul(x = current_value_5_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_568_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_570_cast_fp16 = mul(x = var_60_cast_fp16_2, y = var_137_cast_fp16)[name = tensor<string, []>("op_570_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> value_9_cast_fp16 = add(x = var_568_cast_fp16, y = var_570_cast_fp16)[name = tensor<string, []>("value_9_cast_fp16")];
            tensor<int32, [4]> var_573 = const()[name = tensor<string, []>("op_573"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_574_cast_fp16 = reshape(shape = var_573, x = query_9_cast_fp16)[name = tensor<string, []>("op_574_cast_fp16")];
            tensor<fp16, []> var_575_to_fp16 = const()[name = tensor<string, []>("op_575_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_576_cast_fp16 = mul(x = var_574_cast_fp16, y = var_575_to_fp16)[name = tensor<string, []>("op_576_cast_fp16")];
            tensor<int32, [4]> var_577 = const()[name = tensor<string, []>("op_577"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_578_cast_fp16 = reshape(shape = var_577, x = key_9_cast_fp16)[name = tensor<string, []>("op_578_cast_fp16")];
            tensor<bool, []> mh_w_13_transpose_x_0 = const()[name = tensor<string, []>("mh_w_13_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_13_transpose_y_0 = const()[name = tensor<string, []>("mh_w_13_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 224]> mh_w_13_cast_fp16 = matmul(transpose_x = mh_w_13_transpose_x_0, transpose_y = mh_w_13_transpose_y_0, x = var_576_cast_fp16, y = var_578_cast_fp16)[name = tensor<string, []>("mh_w_13_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> mh_w_15_cast_fp16 = add(x = mh_w_13_cast_fp16, y = var_155_cast_fp16)[name = tensor<string, []>("mh_w_15_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> var_586_cast_fp16 = softmax(axis = var_500, x = mh_w_15_cast_fp16)[name = tensor<string, []>("op_586_cast_fp16")];
            tensor<int32, [4]> var_587 = const()[name = tensor<string, []>("op_587"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_588_cast_fp16 = reshape(shape = var_587, x = value_9_cast_fp16)[name = tensor<string, []>("op_588_cast_fp16")];
            tensor<bool, []> attn_9_transpose_x_0 = const()[name = tensor<string, []>("attn_9_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_9_transpose_y_0 = const()[name = tensor<string, []>("attn_9_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_9_cast_fp16 = matmul(transpose_x = attn_9_transpose_x_0, transpose_y = attn_9_transpose_y_0, x = var_588_cast_fp16, y = var_586_cast_fp16)[name = tensor<string, []>("attn_9_cast_fp16")];
            tensor<int32, [4]> var_591 = const()[name = tensor<string, []>("op_591"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_21_cast_fp16 = reshape(shape = var_591, x = attn_9_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<int32, [2]> var_595 = const()[name = tensor<string, []>("op_595"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_597 = const()[name = tensor<string, []>("op_597"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_35_pad_type_0 = const()[name = tensor<string, []>("obj_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_35_pad_0 = const()[name = tensor<string, []>("obj_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_2_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71963392)))];
            tensor<fp16, [512]> layers_2_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(72487744)))];
            tensor<fp16, [1, 512, 1, 1]> obj_35_cast_fp16 = conv(bias = layers_2_self_attn_o_proj_bias_to_fp16, dilations = var_597, groups = var_507, pad = obj_35_pad_0, pad_type = obj_35_pad_type_0, strides = var_595, weight = layers_2_self_attn_o_proj_weight_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("obj_35_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_15_cast_fp16 = add(x = inputs_13_cast_fp16, y = obj_35_cast_fp16)[name = tensor<string, []>("inputs_15_cast_fp16")];
            tensor<int32, [1]> var_607 = const()[name = tensor<string, []>("op_607"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_15_cast_fp16 = reduce_mean(axes = var_607, keep_dims = var_508, x = inputs_15_cast_fp16)[name = tensor<string, []>("channels_mean_15_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_15_cast_fp16 = sub(x = inputs_15_cast_fp16, y = channels_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_15_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = zero_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_sq_15_cast_fp16")];
            tensor<int32, [1]> var_611 = const()[name = tensor<string, []>("op_611"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_612_cast_fp16 = reduce_mean(axes = var_611, keep_dims = var_508, x = zero_mean_sq_15_cast_fp16)[name = tensor<string, []>("op_612_cast_fp16")];
            tensor<fp16, []> var_613_to_fp16 = const()[name = tensor<string, []>("op_613_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_614_cast_fp16 = add(x = var_612_cast_fp16, y = var_613_to_fp16)[name = tensor<string, []>("op_614_cast_fp16")];
            tensor<fp16, []> denom_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_15_cast_fp16 = rsqrt(epsilon = denom_15_epsilon_0_to_fp16, x = var_614_cast_fp16)[name = tensor<string, []>("denom_15_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = denom_15_cast_fp16)[name = tensor<string, []>("out_15_cast_fp16")];
            tensor<fp16, [512]> obj_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_37_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(72488832)))];
            tensor<fp16, [512]> obj_37_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_37_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(72489920)))];
            tensor<fp16, []> obj_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_37_cast_fp16 = batch_norm(beta = obj_37_beta_0_to_fp16, epsilon = obj_37_epsilon_0_to_fp16, gamma = obj_37_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_15_cast_fp16)[name = tensor<string, []>("obj_37_cast_fp16")];
            tensor<int32, [2]> var_629 = const()[name = tensor<string, []>("op_629"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_631 = const()[name = tensor<string, []>("op_631"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_11_pad_type_0 = const()[name = tensor<string, []>("query_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_11_pad_0 = const()[name = tensor<string, []>("query_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_2_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(72491008)))];
            tensor<fp16, [512]> layers_2_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73015360)))];
            tensor<fp16, [1, 512, 1, 1]> query_11_cast_fp16 = conv(bias = layers_2_encoder_attn_q_proj_bias_to_fp16, dilations = var_631, groups = var_507, pad = query_11_pad_0, pad_type = query_11_pad_type_0, strides = var_629, weight = layers_2_encoder_attn_q_proj_weight_to_fp16, x = obj_37_cast_fp16)[name = tensor<string, []>("query_11_cast_fp16")];
            tensor<int32, [2]> var_635 = const()[name = tensor<string, []>("op_635"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_637 = const()[name = tensor<string, []>("op_637"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_11_pad_type_0 = const()[name = tensor<string, []>("key_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_11_pad_0 = const()[name = tensor<string, []>("key_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_2_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73016448)))];
            tensor<fp16, [1, 512, 1, 1500]> key_11_cast_fp16 = conv(dilations = var_637, groups = var_507, pad = key_11_pad_0, pad_type = key_11_pad_type_0, strides = var_635, weight = layers_2_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_11_cast_fp16")];
            tensor<int32, [2]> var_642 = const()[name = tensor<string, []>("op_642"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_644 = const()[name = tensor<string, []>("op_644"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_11_pad_type_0 = const()[name = tensor<string, []>("value_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_11_pad_0 = const()[name = tensor<string, []>("value_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_2_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73540800)))];
            tensor<fp16, [512]> layers_2_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74065152)))];
            tensor<fp16, [1, 512, 1, 1500]> value_11_cast_fp16 = conv(bias = layers_2_encoder_attn_v_proj_bias_to_fp16, dilations = var_644, groups = var_507, pad = value_11_pad_0, pad_type = value_11_pad_type_0, strides = var_642, weight = layers_2_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_11_cast_fp16")];
            tensor<int32, [4]> var_648 = const()[name = tensor<string, []>("op_648"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_649_cast_fp16 = reshape(shape = var_648, x = query_11_cast_fp16)[name = tensor<string, []>("op_649_cast_fp16")];
            tensor<fp16, []> var_650_to_fp16 = const()[name = tensor<string, []>("op_650_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_651_cast_fp16 = mul(x = var_649_cast_fp16, y = var_650_to_fp16)[name = tensor<string, []>("op_651_cast_fp16")];
            tensor<int32, [4]> var_652 = const()[name = tensor<string, []>("op_652"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_653_cast_fp16 = reshape(shape = var_652, x = key_11_cast_fp16)[name = tensor<string, []>("op_653_cast_fp16")];
            tensor<bool, []> mh_w_17_transpose_x_0 = const()[name = tensor<string, []>("mh_w_17_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_17_transpose_y_0 = const()[name = tensor<string, []>("mh_w_17_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 1500]> mh_w_17_cast_fp16 = matmul(transpose_x = mh_w_17_transpose_x_0, transpose_y = mh_w_17_transpose_y_0, x = var_651_cast_fp16, y = var_653_cast_fp16)[name = tensor<string, []>("mh_w_17_cast_fp16")];
            tensor<fp16, [1, 8, 1, 1500]> obj_41_cast_fp16 = softmax(axis = var_500, x = mh_w_17_cast_fp16)[name = tensor<string, []>("obj_41_cast_fp16")];
            tensor<int32, [4]> var_657 = const()[name = tensor<string, []>("op_657"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_658_cast_fp16 = reshape(shape = var_657, x = value_11_cast_fp16)[name = tensor<string, []>("op_658_cast_fp16")];
            tensor<bool, []> attn_11_transpose_x_0 = const()[name = tensor<string, []>("attn_11_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_11_transpose_y_0 = const()[name = tensor<string, []>("attn_11_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_11_cast_fp16 = matmul(transpose_x = attn_11_transpose_x_0, transpose_y = attn_11_transpose_y_0, x = var_658_cast_fp16, y = obj_41_cast_fp16)[name = tensor<string, []>("attn_11_cast_fp16")];
            tensor<int32, [4]> var_661 = const()[name = tensor<string, []>("op_661"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_23_cast_fp16 = reshape(shape = var_661, x = attn_11_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, [2]> var_665 = const()[name = tensor<string, []>("op_665"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_667 = const()[name = tensor<string, []>("op_667"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_39_pad_type_0 = const()[name = tensor<string, []>("obj_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_39_pad_0 = const()[name = tensor<string, []>("obj_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_2_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74066240)))];
            tensor<fp16, [512]> layers_2_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74590592)))];
            tensor<fp16, [1, 512, 1, 1]> obj_39_cast_fp16 = conv(bias = layers_2_encoder_attn_o_proj_bias_to_fp16, dilations = var_667, groups = var_507, pad = obj_39_pad_0, pad_type = obj_39_pad_type_0, strides = var_665, weight = layers_2_encoder_attn_o_proj_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("obj_39_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_17_cast_fp16 = add(x = inputs_15_cast_fp16, y = obj_39_cast_fp16)[name = tensor<string, []>("inputs_17_cast_fp16")];
            tensor<int32, [1]> var_673 = const()[name = tensor<string, []>("op_673"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_17_cast_fp16 = reduce_mean(axes = var_673, keep_dims = var_508, x = inputs_17_cast_fp16)[name = tensor<string, []>("channels_mean_17_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_17_cast_fp16 = sub(x = inputs_17_cast_fp16, y = channels_mean_17_cast_fp16)[name = tensor<string, []>("zero_mean_17_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_17_cast_fp16 = mul(x = zero_mean_17_cast_fp16, y = zero_mean_17_cast_fp16)[name = tensor<string, []>("zero_mean_sq_17_cast_fp16")];
            tensor<int32, [1]> var_677 = const()[name = tensor<string, []>("op_677"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_678_cast_fp16 = reduce_mean(axes = var_677, keep_dims = var_508, x = zero_mean_sq_17_cast_fp16)[name = tensor<string, []>("op_678_cast_fp16")];
            tensor<fp16, []> var_679_to_fp16 = const()[name = tensor<string, []>("op_679_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_680_cast_fp16 = add(x = var_678_cast_fp16, y = var_679_to_fp16)[name = tensor<string, []>("op_680_cast_fp16")];
            tensor<fp16, []> denom_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_17_cast_fp16 = rsqrt(epsilon = denom_17_epsilon_0_to_fp16, x = var_680_cast_fp16)[name = tensor<string, []>("denom_17_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_17_cast_fp16 = mul(x = zero_mean_17_cast_fp16, y = denom_17_cast_fp16)[name = tensor<string, []>("out_17_cast_fp16")];
            tensor<fp16, [512]> input_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_25_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74591680)))];
            tensor<fp16, [512]> input_25_beta_0_to_fp16 = const()[name = tensor<string, []>("input_25_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74592768)))];
            tensor<fp16, []> input_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> input_25_cast_fp16 = batch_norm(beta = input_25_beta_0_to_fp16, epsilon = input_25_epsilon_0_to_fp16, gamma = input_25_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_17_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<int32, [2]> var_691 = const()[name = tensor<string, []>("op_691"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_693 = const()[name = tensor<string, []>("op_693"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_27_pad_type_0 = const()[name = tensor<string, []>("input_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_27_pad_0 = const()[name = tensor<string, []>("input_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> layers_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_weight_to_fp16"), val = tensor<fp16, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74593856)))];
            tensor<fp16, [2048]> layers_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76691072)))];
            tensor<fp16, [1, 2048, 1, 1]> input_27_cast_fp16 = conv(bias = layers_2_fc1_bias_to_fp16, dilations = var_693, groups = var_507, pad = input_27_pad_0, pad_type = input_27_pad_type_0, strides = var_691, weight = layers_2_fc1_weight_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<string, []> input_29_mode_0 = const()[name = tensor<string, []>("input_29_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 2048, 1, 1]> input_29_cast_fp16 = gelu(mode = input_29_mode_0, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<int32, [2]> var_699 = const()[name = tensor<string, []>("op_699"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_701 = const()[name = tensor<string, []>("op_701"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_7_pad_type_0 = const()[name = tensor<string, []>("hidden_states_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> layers_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_weight_to_fp16"), val = tensor<fp16, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76695232)))];
            tensor<fp16, [512]> layers_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78792448)))];
            tensor<fp16, [1, 512, 1, 1]> hidden_states_7_cast_fp16 = conv(bias = layers_2_fc2_bias_to_fp16, dilations = var_701, groups = var_507, pad = hidden_states_7_pad_0, pad_type = hidden_states_7_pad_type_0, strides = var_699, weight = layers_2_fc2_weight_to_fp16, x = input_29_cast_fp16)[name = tensor<string, []>("hidden_states_7_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_19_cast_fp16 = add(x = inputs_17_cast_fp16, y = hidden_states_7_cast_fp16)[name = tensor<string, []>("inputs_19_cast_fp16")];
            tensor<int32, []> var_714 = const()[name = tensor<string, []>("op_714"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_721 = const()[name = tensor<string, []>("op_721"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_722 = const()[name = tensor<string, []>("op_722"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_734 = const()[name = tensor<string, []>("op_734"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_19_cast_fp16 = reduce_mean(axes = var_734, keep_dims = var_722, x = inputs_19_cast_fp16)[name = tensor<string, []>("channels_mean_19_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_19_cast_fp16 = sub(x = inputs_19_cast_fp16, y = channels_mean_19_cast_fp16)[name = tensor<string, []>("zero_mean_19_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_19_cast_fp16 = mul(x = zero_mean_19_cast_fp16, y = zero_mean_19_cast_fp16)[name = tensor<string, []>("zero_mean_sq_19_cast_fp16")];
            tensor<int32, [1]> var_738 = const()[name = tensor<string, []>("op_738"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_739_cast_fp16 = reduce_mean(axes = var_738, keep_dims = var_722, x = zero_mean_sq_19_cast_fp16)[name = tensor<string, []>("op_739_cast_fp16")];
            tensor<fp16, []> var_740_to_fp16 = const()[name = tensor<string, []>("op_740_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_741_cast_fp16 = add(x = var_739_cast_fp16, y = var_740_to_fp16)[name = tensor<string, []>("op_741_cast_fp16")];
            tensor<fp16, []> denom_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_19_cast_fp16 = rsqrt(epsilon = denom_19_epsilon_0_to_fp16, x = var_741_cast_fp16)[name = tensor<string, []>("denom_19_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_19_cast_fp16 = mul(x = zero_mean_19_cast_fp16, y = denom_19_cast_fp16)[name = tensor<string, []>("out_19_cast_fp16")];
            tensor<fp16, [512]> obj_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_43_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78793536)))];
            tensor<fp16, [512]> obj_43_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_43_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78794624)))];
            tensor<fp16, []> obj_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_43_cast_fp16 = batch_norm(beta = obj_43_beta_0_to_fp16, epsilon = obj_43_epsilon_0_to_fp16, gamma = obj_43_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_19_cast_fp16)[name = tensor<string, []>("obj_43_cast_fp16")];
            tensor<int32, [2]> var_756 = const()[name = tensor<string, []>("op_756"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_758 = const()[name = tensor<string, []>("op_758"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_13_pad_type_0 = const()[name = tensor<string, []>("query_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_13_pad_0 = const()[name = tensor<string, []>("query_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_3_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78795712)))];
            tensor<fp16, [512]> layers_3_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79320064)))];
            tensor<fp16, [1, 512, 1, 1]> query_13_cast_fp16 = conv(bias = layers_3_self_attn_q_proj_bias_to_fp16, dilations = var_758, groups = var_721, pad = query_13_pad_0, pad_type = query_13_pad_type_0, strides = var_756, weight = layers_3_self_attn_q_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("query_13_cast_fp16")];
            tensor<int32, [2]> var_762 = const()[name = tensor<string, []>("op_762"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_764 = const()[name = tensor<string, []>("op_764"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_7_pad_type_0 = const()[name = tensor<string, []>("current_key_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_7_pad_0 = const()[name = tensor<string, []>("current_key_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_3_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79321152)))];
            tensor<fp16, [1, 512, 1, 1]> current_key_7_cast_fp16 = conv(dilations = var_764, groups = var_721, pad = current_key_7_pad_0, pad_type = current_key_7_pad_type_0, strides = var_762, weight = layers_3_self_attn_k_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("current_key_7_cast_fp16")];
            tensor<int32, [2]> var_769 = const()[name = tensor<string, []>("op_769"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_771 = const()[name = tensor<string, []>("op_771"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_7_pad_type_0 = const()[name = tensor<string, []>("current_value_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_7_pad_0 = const()[name = tensor<string, []>("current_value_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_3_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79845504)))];
            tensor<fp16, [512]> layers_3_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80369856)))];
            tensor<fp16, [1, 512, 1, 1]> current_value_7_cast_fp16 = conv(bias = layers_3_self_attn_v_proj_bias_to_fp16, dilations = var_771, groups = var_721, pad = current_value_7_pad_0, pad_type = current_value_7_pad_type_0, strides = var_769, weight = layers_3_self_attn_v_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("current_value_7_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_778_cast_fp16 = mul(x = current_key_7_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_778_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_780_cast_fp16 = mul(x = var_51_cast_fp16_3, y = var_137_cast_fp16)[name = tensor<string, []>("op_780_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> key_13_cast_fp16 = add(x = var_778_cast_fp16, y = var_780_cast_fp16)[name = tensor<string, []>("key_13_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_782_cast_fp16 = mul(x = current_value_7_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_782_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_784_cast_fp16 = mul(x = var_60_cast_fp16_3, y = var_137_cast_fp16)[name = tensor<string, []>("op_784_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> value_13_cast_fp16 = add(x = var_782_cast_fp16, y = var_784_cast_fp16)[name = tensor<string, []>("value_13_cast_fp16")];
            tensor<int32, [4]> var_787 = const()[name = tensor<string, []>("op_787"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_788_cast_fp16 = reshape(shape = var_787, x = query_13_cast_fp16)[name = tensor<string, []>("op_788_cast_fp16")];
            tensor<fp16, []> var_789_to_fp16 = const()[name = tensor<string, []>("op_789_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_790_cast_fp16 = mul(x = var_788_cast_fp16, y = var_789_to_fp16)[name = tensor<string, []>("op_790_cast_fp16")];
            tensor<int32, [4]> var_791 = const()[name = tensor<string, []>("op_791"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_792_cast_fp16 = reshape(shape = var_791, x = key_13_cast_fp16)[name = tensor<string, []>("op_792_cast_fp16")];
            tensor<bool, []> mh_w_19_transpose_x_0 = const()[name = tensor<string, []>("mh_w_19_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_19_transpose_y_0 = const()[name = tensor<string, []>("mh_w_19_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 224]> mh_w_19_cast_fp16 = matmul(transpose_x = mh_w_19_transpose_x_0, transpose_y = mh_w_19_transpose_y_0, x = var_790_cast_fp16, y = var_792_cast_fp16)[name = tensor<string, []>("mh_w_19_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> mh_w_21_cast_fp16 = add(x = mh_w_19_cast_fp16, y = var_155_cast_fp16)[name = tensor<string, []>("mh_w_21_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> var_800_cast_fp16 = softmax(axis = var_714, x = mh_w_21_cast_fp16)[name = tensor<string, []>("op_800_cast_fp16")];
            tensor<int32, [4]> var_801 = const()[name = tensor<string, []>("op_801"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_802_cast_fp16 = reshape(shape = var_801, x = value_13_cast_fp16)[name = tensor<string, []>("op_802_cast_fp16")];
            tensor<bool, []> attn_13_transpose_x_0 = const()[name = tensor<string, []>("attn_13_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_13_transpose_y_0 = const()[name = tensor<string, []>("attn_13_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_13_cast_fp16 = matmul(transpose_x = attn_13_transpose_x_0, transpose_y = attn_13_transpose_y_0, x = var_802_cast_fp16, y = var_800_cast_fp16)[name = tensor<string, []>("attn_13_cast_fp16")];
            tensor<int32, [4]> var_805 = const()[name = tensor<string, []>("op_805"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_31_cast_fp16 = reshape(shape = var_805, x = attn_13_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<int32, [2]> var_809 = const()[name = tensor<string, []>("op_809"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_811 = const()[name = tensor<string, []>("op_811"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_49_pad_type_0 = const()[name = tensor<string, []>("obj_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_49_pad_0 = const()[name = tensor<string, []>("obj_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_3_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80370944)))];
            tensor<fp16, [512]> layers_3_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80895296)))];
            tensor<fp16, [1, 512, 1, 1]> obj_49_cast_fp16 = conv(bias = layers_3_self_attn_o_proj_bias_to_fp16, dilations = var_811, groups = var_721, pad = obj_49_pad_0, pad_type = obj_49_pad_type_0, strides = var_809, weight = layers_3_self_attn_o_proj_weight_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("obj_49_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_21_cast_fp16 = add(x = inputs_19_cast_fp16, y = obj_49_cast_fp16)[name = tensor<string, []>("inputs_21_cast_fp16")];
            tensor<int32, [1]> var_821 = const()[name = tensor<string, []>("op_821"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_21_cast_fp16 = reduce_mean(axes = var_821, keep_dims = var_722, x = inputs_21_cast_fp16)[name = tensor<string, []>("channels_mean_21_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_21_cast_fp16 = sub(x = inputs_21_cast_fp16, y = channels_mean_21_cast_fp16)[name = tensor<string, []>("zero_mean_21_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_21_cast_fp16 = mul(x = zero_mean_21_cast_fp16, y = zero_mean_21_cast_fp16)[name = tensor<string, []>("zero_mean_sq_21_cast_fp16")];
            tensor<int32, [1]> var_825 = const()[name = tensor<string, []>("op_825"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_826_cast_fp16 = reduce_mean(axes = var_825, keep_dims = var_722, x = zero_mean_sq_21_cast_fp16)[name = tensor<string, []>("op_826_cast_fp16")];
            tensor<fp16, []> var_827_to_fp16 = const()[name = tensor<string, []>("op_827_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_828_cast_fp16 = add(x = var_826_cast_fp16, y = var_827_to_fp16)[name = tensor<string, []>("op_828_cast_fp16")];
            tensor<fp16, []> denom_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_21_cast_fp16 = rsqrt(epsilon = denom_21_epsilon_0_to_fp16, x = var_828_cast_fp16)[name = tensor<string, []>("denom_21_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_21_cast_fp16 = mul(x = zero_mean_21_cast_fp16, y = denom_21_cast_fp16)[name = tensor<string, []>("out_21_cast_fp16")];
            tensor<fp16, [512]> obj_51_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_51_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80896384)))];
            tensor<fp16, [512]> obj_51_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_51_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80897472)))];
            tensor<fp16, []> obj_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_51_cast_fp16 = batch_norm(beta = obj_51_beta_0_to_fp16, epsilon = obj_51_epsilon_0_to_fp16, gamma = obj_51_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_21_cast_fp16)[name = tensor<string, []>("obj_51_cast_fp16")];
            tensor<int32, [2]> var_843 = const()[name = tensor<string, []>("op_843"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_845 = const()[name = tensor<string, []>("op_845"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_15_pad_type_0 = const()[name = tensor<string, []>("query_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_15_pad_0 = const()[name = tensor<string, []>("query_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_3_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80898560)))];
            tensor<fp16, [512]> layers_3_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81422912)))];
            tensor<fp16, [1, 512, 1, 1]> query_15_cast_fp16 = conv(bias = layers_3_encoder_attn_q_proj_bias_to_fp16, dilations = var_845, groups = var_721, pad = query_15_pad_0, pad_type = query_15_pad_type_0, strides = var_843, weight = layers_3_encoder_attn_q_proj_weight_to_fp16, x = obj_51_cast_fp16)[name = tensor<string, []>("query_15_cast_fp16")];
            tensor<int32, [2]> var_849 = const()[name = tensor<string, []>("op_849"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_851 = const()[name = tensor<string, []>("op_851"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_15_pad_type_0 = const()[name = tensor<string, []>("key_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_15_pad_0 = const()[name = tensor<string, []>("key_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_3_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81424000)))];
            tensor<fp16, [1, 512, 1, 1500]> key_15_cast_fp16 = conv(dilations = var_851, groups = var_721, pad = key_15_pad_0, pad_type = key_15_pad_type_0, strides = var_849, weight = layers_3_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_15_cast_fp16")];
            tensor<int32, [2]> var_856 = const()[name = tensor<string, []>("op_856"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_858 = const()[name = tensor<string, []>("op_858"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_15_pad_type_0 = const()[name = tensor<string, []>("value_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_15_pad_0 = const()[name = tensor<string, []>("value_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_3_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81948352)))];
            tensor<fp16, [512]> layers_3_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82472704)))];
            tensor<fp16, [1, 512, 1, 1500]> value_15_cast_fp16 = conv(bias = layers_3_encoder_attn_v_proj_bias_to_fp16, dilations = var_858, groups = var_721, pad = value_15_pad_0, pad_type = value_15_pad_type_0, strides = var_856, weight = layers_3_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_15_cast_fp16")];
            tensor<int32, [4]> var_862 = const()[name = tensor<string, []>("op_862"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_863_cast_fp16 = reshape(shape = var_862, x = query_15_cast_fp16)[name = tensor<string, []>("op_863_cast_fp16")];
            tensor<fp16, []> var_864_to_fp16 = const()[name = tensor<string, []>("op_864_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_865_cast_fp16 = mul(x = var_863_cast_fp16, y = var_864_to_fp16)[name = tensor<string, []>("op_865_cast_fp16")];
            tensor<int32, [4]> var_866 = const()[name = tensor<string, []>("op_866"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_867_cast_fp16 = reshape(shape = var_866, x = key_15_cast_fp16)[name = tensor<string, []>("op_867_cast_fp16")];
            tensor<bool, []> mh_w_23_transpose_x_0 = const()[name = tensor<string, []>("mh_w_23_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_23_transpose_y_0 = const()[name = tensor<string, []>("mh_w_23_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 1500]> mh_w_23_cast_fp16 = matmul(transpose_x = mh_w_23_transpose_x_0, transpose_y = mh_w_23_transpose_y_0, x = var_865_cast_fp16, y = var_867_cast_fp16)[name = tensor<string, []>("mh_w_23_cast_fp16")];
            tensor<fp16, [1, 8, 1, 1500]> obj_55_cast_fp16 = softmax(axis = var_714, x = mh_w_23_cast_fp16)[name = tensor<string, []>("obj_55_cast_fp16")];
            tensor<int32, [4]> var_871 = const()[name = tensor<string, []>("op_871"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_872_cast_fp16 = reshape(shape = var_871, x = value_15_cast_fp16)[name = tensor<string, []>("op_872_cast_fp16")];
            tensor<bool, []> attn_15_transpose_x_0 = const()[name = tensor<string, []>("attn_15_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_15_transpose_y_0 = const()[name = tensor<string, []>("attn_15_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_15_cast_fp16 = matmul(transpose_x = attn_15_transpose_x_0, transpose_y = attn_15_transpose_y_0, x = var_872_cast_fp16, y = obj_55_cast_fp16)[name = tensor<string, []>("attn_15_cast_fp16")];
            tensor<int32, [4]> var_875 = const()[name = tensor<string, []>("op_875"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_33_cast_fp16 = reshape(shape = var_875, x = attn_15_cast_fp16)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<int32, [2]> var_879 = const()[name = tensor<string, []>("op_879"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_881 = const()[name = tensor<string, []>("op_881"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_53_pad_type_0 = const()[name = tensor<string, []>("obj_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_53_pad_0 = const()[name = tensor<string, []>("obj_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_3_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82473792)))];
            tensor<fp16, [512]> layers_3_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82998144)))];
            tensor<fp16, [1, 512, 1, 1]> obj_53_cast_fp16 = conv(bias = layers_3_encoder_attn_o_proj_bias_to_fp16, dilations = var_881, groups = var_721, pad = obj_53_pad_0, pad_type = obj_53_pad_type_0, strides = var_879, weight = layers_3_encoder_attn_o_proj_weight_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("obj_53_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_23_cast_fp16 = add(x = inputs_21_cast_fp16, y = obj_53_cast_fp16)[name = tensor<string, []>("inputs_23_cast_fp16")];
            tensor<int32, [1]> var_890 = const()[name = tensor<string, []>("op_890"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_23_cast_fp16 = reduce_mean(axes = var_890, keep_dims = var_722, x = inputs_23_cast_fp16)[name = tensor<string, []>("channels_mean_23_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_23_cast_fp16 = sub(x = inputs_23_cast_fp16, y = channels_mean_23_cast_fp16)[name = tensor<string, []>("zero_mean_23_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_23_cast_fp16 = mul(x = zero_mean_23_cast_fp16, y = zero_mean_23_cast_fp16)[name = tensor<string, []>("zero_mean_sq_23_cast_fp16")];
            tensor<int32, [1]> var_894 = const()[name = tensor<string, []>("op_894"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_895_cast_fp16 = reduce_mean(axes = var_894, keep_dims = var_722, x = zero_mean_sq_23_cast_fp16)[name = tensor<string, []>("op_895_cast_fp16")];
            tensor<fp16, []> var_896_to_fp16 = const()[name = tensor<string, []>("op_896_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_897_cast_fp16 = add(x = var_895_cast_fp16, y = var_896_to_fp16)[name = tensor<string, []>("op_897_cast_fp16")];
            tensor<fp16, []> denom_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_23_cast_fp16 = rsqrt(epsilon = denom_23_epsilon_0_to_fp16, x = var_897_cast_fp16)[name = tensor<string, []>("denom_23_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_23_cast_fp16 = mul(x = zero_mean_23_cast_fp16, y = denom_23_cast_fp16)[name = tensor<string, []>("out_23_cast_fp16")];
            tensor<fp16, [512]> input_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_35_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82999232)))];
            tensor<fp16, [512]> input_35_beta_0_to_fp16 = const()[name = tensor<string, []>("input_35_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83000320)))];
            tensor<fp16, []> input_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> input_35_cast_fp16 = batch_norm(beta = input_35_beta_0_to_fp16, epsilon = input_35_epsilon_0_to_fp16, gamma = input_35_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_23_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<int32, [2]> var_908 = const()[name = tensor<string, []>("op_908"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_910 = const()[name = tensor<string, []>("op_910"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> layers_3_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_weight_to_fp16"), val = tensor<fp16, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83001408)))];
            tensor<fp16, [2048]> layers_3_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85098624)))];
            tensor<fp16, [1, 2048, 1, 1]> input_37_cast_fp16 = conv(bias = layers_3_fc1_bias_to_fp16, dilations = var_910, groups = var_721, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_908, weight = layers_3_fc1_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<string, []> input_39_mode_0 = const()[name = tensor<string, []>("input_39_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 2048, 1, 1]> input_39_cast_fp16 = gelu(mode = input_39_mode_0, x = input_37_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<int32, [2]> var_916 = const()[name = tensor<string, []>("op_916"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_918 = const()[name = tensor<string, []>("op_918"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_9_pad_type_0 = const()[name = tensor<string, []>("hidden_states_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_9_pad_0 = const()[name = tensor<string, []>("hidden_states_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> layers_3_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_weight_to_fp16"), val = tensor<fp16, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85102784)))];
            tensor<fp16, [512]> layers_3_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87200000)))];
            tensor<fp16, [1, 512, 1, 1]> hidden_states_9_cast_fp16 = conv(bias = layers_3_fc2_bias_to_fp16, dilations = var_918, groups = var_721, pad = hidden_states_9_pad_0, pad_type = hidden_states_9_pad_type_0, strides = var_916, weight = layers_3_fc2_weight_to_fp16, x = input_39_cast_fp16)[name = tensor<string, []>("hidden_states_9_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_25_cast_fp16 = add(x = inputs_23_cast_fp16, y = hidden_states_9_cast_fp16)[name = tensor<string, []>("inputs_25_cast_fp16")];
            tensor<int32, []> var_932 = const()[name = tensor<string, []>("op_932"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_939 = const()[name = tensor<string, []>("op_939"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_940 = const()[name = tensor<string, []>("op_940"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_952 = const()[name = tensor<string, []>("op_952"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_25_cast_fp16 = reduce_mean(axes = var_952, keep_dims = var_940, x = inputs_25_cast_fp16)[name = tensor<string, []>("channels_mean_25_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_25_cast_fp16 = sub(x = inputs_25_cast_fp16, y = channels_mean_25_cast_fp16)[name = tensor<string, []>("zero_mean_25_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_25_cast_fp16 = mul(x = zero_mean_25_cast_fp16, y = zero_mean_25_cast_fp16)[name = tensor<string, []>("zero_mean_sq_25_cast_fp16")];
            tensor<int32, [1]> var_956 = const()[name = tensor<string, []>("op_956"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_957_cast_fp16 = reduce_mean(axes = var_956, keep_dims = var_940, x = zero_mean_sq_25_cast_fp16)[name = tensor<string, []>("op_957_cast_fp16")];
            tensor<fp16, []> var_958_to_fp16 = const()[name = tensor<string, []>("op_958_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_959_cast_fp16 = add(x = var_957_cast_fp16, y = var_958_to_fp16)[name = tensor<string, []>("op_959_cast_fp16")];
            tensor<fp16, []> denom_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_25_cast_fp16 = rsqrt(epsilon = denom_25_epsilon_0_to_fp16, x = var_959_cast_fp16)[name = tensor<string, []>("denom_25_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_25_cast_fp16 = mul(x = zero_mean_25_cast_fp16, y = denom_25_cast_fp16)[name = tensor<string, []>("out_25_cast_fp16")];
            tensor<fp16, [512]> obj_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_57_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87201088)))];
            tensor<fp16, [512]> obj_57_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_57_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87202176)))];
            tensor<fp16, []> obj_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_57_cast_fp16 = batch_norm(beta = obj_57_beta_0_to_fp16, epsilon = obj_57_epsilon_0_to_fp16, gamma = obj_57_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_25_cast_fp16)[name = tensor<string, []>("obj_57_cast_fp16")];
            tensor<int32, [2]> var_974 = const()[name = tensor<string, []>("op_974"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_976 = const()[name = tensor<string, []>("op_976"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_17_pad_type_0 = const()[name = tensor<string, []>("query_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_17_pad_0 = const()[name = tensor<string, []>("query_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_4_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87203264)))];
            tensor<fp16, [512]> layers_4_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87727616)))];
            tensor<fp16, [1, 512, 1, 1]> query_17_cast_fp16 = conv(bias = layers_4_self_attn_q_proj_bias_to_fp16, dilations = var_976, groups = var_939, pad = query_17_pad_0, pad_type = query_17_pad_type_0, strides = var_974, weight = layers_4_self_attn_q_proj_weight_to_fp16, x = obj_57_cast_fp16)[name = tensor<string, []>("query_17_cast_fp16")];
            tensor<int32, [2]> var_980 = const()[name = tensor<string, []>("op_980"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_982 = const()[name = tensor<string, []>("op_982"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_9_pad_type_0 = const()[name = tensor<string, []>("current_key_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_9_pad_0 = const()[name = tensor<string, []>("current_key_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_4_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87728704)))];
            tensor<fp16, [1, 512, 1, 1]> current_key_9_cast_fp16 = conv(dilations = var_982, groups = var_939, pad = current_key_9_pad_0, pad_type = current_key_9_pad_type_0, strides = var_980, weight = layers_4_self_attn_k_proj_weight_to_fp16, x = obj_57_cast_fp16)[name = tensor<string, []>("current_key_9_cast_fp16")];
            tensor<int32, [2]> var_987 = const()[name = tensor<string, []>("op_987"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_989 = const()[name = tensor<string, []>("op_989"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_9_pad_type_0 = const()[name = tensor<string, []>("current_value_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_9_pad_0 = const()[name = tensor<string, []>("current_value_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_4_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(88253056)))];
            tensor<fp16, [512]> layers_4_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(88777408)))];
            tensor<fp16, [1, 512, 1, 1]> current_value_9_cast_fp16 = conv(bias = layers_4_self_attn_v_proj_bias_to_fp16, dilations = var_989, groups = var_939, pad = current_value_9_pad_0, pad_type = current_value_9_pad_type_0, strides = var_987, weight = layers_4_self_attn_v_proj_weight_to_fp16, x = obj_57_cast_fp16)[name = tensor<string, []>("current_value_9_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_996_cast_fp16 = mul(x = current_key_9_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_996_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_998_cast_fp16 = mul(x = var_51_cast_fp16_4, y = var_137_cast_fp16)[name = tensor<string, []>("op_998_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> key_17_cast_fp16 = add(x = var_996_cast_fp16, y = var_998_cast_fp16)[name = tensor<string, []>("key_17_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_1000_cast_fp16 = mul(x = current_value_9_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_1000_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_1002_cast_fp16 = mul(x = var_60_cast_fp16_4, y = var_137_cast_fp16)[name = tensor<string, []>("op_1002_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> value_17_cast_fp16 = add(x = var_1000_cast_fp16, y = var_1002_cast_fp16)[name = tensor<string, []>("value_17_cast_fp16")];
            tensor<int32, [4]> var_1005 = const()[name = tensor<string, []>("op_1005"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_1006_cast_fp16 = reshape(shape = var_1005, x = query_17_cast_fp16)[name = tensor<string, []>("op_1006_cast_fp16")];
            tensor<fp16, []> var_1007_to_fp16 = const()[name = tensor<string, []>("op_1007_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_1008_cast_fp16 = mul(x = var_1006_cast_fp16, y = var_1007_to_fp16)[name = tensor<string, []>("op_1008_cast_fp16")];
            tensor<int32, [4]> var_1009 = const()[name = tensor<string, []>("op_1009"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_1010_cast_fp16 = reshape(shape = var_1009, x = key_17_cast_fp16)[name = tensor<string, []>("op_1010_cast_fp16")];
            tensor<bool, []> mh_w_25_transpose_x_0 = const()[name = tensor<string, []>("mh_w_25_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_25_transpose_y_0 = const()[name = tensor<string, []>("mh_w_25_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 224]> mh_w_25_cast_fp16 = matmul(transpose_x = mh_w_25_transpose_x_0, transpose_y = mh_w_25_transpose_y_0, x = var_1008_cast_fp16, y = var_1010_cast_fp16)[name = tensor<string, []>("mh_w_25_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> mh_w_27_cast_fp16 = add(x = mh_w_25_cast_fp16, y = var_155_cast_fp16)[name = tensor<string, []>("mh_w_27_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> var_1018_cast_fp16 = softmax(axis = var_932, x = mh_w_27_cast_fp16)[name = tensor<string, []>("op_1018_cast_fp16")];
            tensor<int32, [4]> var_1019 = const()[name = tensor<string, []>("op_1019"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_1020_cast_fp16 = reshape(shape = var_1019, x = value_17_cast_fp16)[name = tensor<string, []>("op_1020_cast_fp16")];
            tensor<bool, []> attn_17_transpose_x_0 = const()[name = tensor<string, []>("attn_17_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_17_transpose_y_0 = const()[name = tensor<string, []>("attn_17_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_17_cast_fp16 = matmul(transpose_x = attn_17_transpose_x_0, transpose_y = attn_17_transpose_y_0, x = var_1020_cast_fp16, y = var_1018_cast_fp16)[name = tensor<string, []>("attn_17_cast_fp16")];
            tensor<int32, [4]> var_1023 = const()[name = tensor<string, []>("op_1023"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_41_cast_fp16 = reshape(shape = var_1023, x = attn_17_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<int32, [2]> var_1027 = const()[name = tensor<string, []>("op_1027"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1029 = const()[name = tensor<string, []>("op_1029"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_63_pad_type_0 = const()[name = tensor<string, []>("obj_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_63_pad_0 = const()[name = tensor<string, []>("obj_63_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_4_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(88778496)))];
            tensor<fp16, [512]> layers_4_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89302848)))];
            tensor<fp16, [1, 512, 1, 1]> obj_63_cast_fp16 = conv(bias = layers_4_self_attn_o_proj_bias_to_fp16, dilations = var_1029, groups = var_939, pad = obj_63_pad_0, pad_type = obj_63_pad_type_0, strides = var_1027, weight = layers_4_self_attn_o_proj_weight_to_fp16, x = input_41_cast_fp16)[name = tensor<string, []>("obj_63_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_27_cast_fp16 = add(x = inputs_25_cast_fp16, y = obj_63_cast_fp16)[name = tensor<string, []>("inputs_27_cast_fp16")];
            tensor<int32, [1]> var_1039 = const()[name = tensor<string, []>("op_1039"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_27_cast_fp16 = reduce_mean(axes = var_1039, keep_dims = var_940, x = inputs_27_cast_fp16)[name = tensor<string, []>("channels_mean_27_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_27_cast_fp16 = sub(x = inputs_27_cast_fp16, y = channels_mean_27_cast_fp16)[name = tensor<string, []>("zero_mean_27_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_27_cast_fp16 = mul(x = zero_mean_27_cast_fp16, y = zero_mean_27_cast_fp16)[name = tensor<string, []>("zero_mean_sq_27_cast_fp16")];
            tensor<int32, [1]> var_1043 = const()[name = tensor<string, []>("op_1043"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1044_cast_fp16 = reduce_mean(axes = var_1043, keep_dims = var_940, x = zero_mean_sq_27_cast_fp16)[name = tensor<string, []>("op_1044_cast_fp16")];
            tensor<fp16, []> var_1045_to_fp16 = const()[name = tensor<string, []>("op_1045_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1046_cast_fp16 = add(x = var_1044_cast_fp16, y = var_1045_to_fp16)[name = tensor<string, []>("op_1046_cast_fp16")];
            tensor<fp16, []> denom_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_27_cast_fp16 = rsqrt(epsilon = denom_27_epsilon_0_to_fp16, x = var_1046_cast_fp16)[name = tensor<string, []>("denom_27_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_27_cast_fp16 = mul(x = zero_mean_27_cast_fp16, y = denom_27_cast_fp16)[name = tensor<string, []>("out_27_cast_fp16")];
            tensor<fp16, [512]> obj_65_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_65_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89303936)))];
            tensor<fp16, [512]> obj_65_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_65_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89305024)))];
            tensor<fp16, []> obj_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_65_cast_fp16 = batch_norm(beta = obj_65_beta_0_to_fp16, epsilon = obj_65_epsilon_0_to_fp16, gamma = obj_65_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_27_cast_fp16)[name = tensor<string, []>("obj_65_cast_fp16")];
            tensor<int32, [2]> var_1061 = const()[name = tensor<string, []>("op_1061"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1063 = const()[name = tensor<string, []>("op_1063"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_19_pad_type_0 = const()[name = tensor<string, []>("query_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_19_pad_0 = const()[name = tensor<string, []>("query_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_4_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89306112)))];
            tensor<fp16, [512]> layers_4_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89830464)))];
            tensor<fp16, [1, 512, 1, 1]> query_19_cast_fp16 = conv(bias = layers_4_encoder_attn_q_proj_bias_to_fp16, dilations = var_1063, groups = var_939, pad = query_19_pad_0, pad_type = query_19_pad_type_0, strides = var_1061, weight = layers_4_encoder_attn_q_proj_weight_to_fp16, x = obj_65_cast_fp16)[name = tensor<string, []>("query_19_cast_fp16")];
            tensor<int32, [2]> var_1067 = const()[name = tensor<string, []>("op_1067"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1069 = const()[name = tensor<string, []>("op_1069"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_19_pad_type_0 = const()[name = tensor<string, []>("key_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_19_pad_0 = const()[name = tensor<string, []>("key_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_4_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89831552)))];
            tensor<fp16, [1, 512, 1, 1500]> key_19_cast_fp16 = conv(dilations = var_1069, groups = var_939, pad = key_19_pad_0, pad_type = key_19_pad_type_0, strides = var_1067, weight = layers_4_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_19_cast_fp16")];
            tensor<int32, [2]> var_1074 = const()[name = tensor<string, []>("op_1074"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1076 = const()[name = tensor<string, []>("op_1076"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_19_pad_type_0 = const()[name = tensor<string, []>("value_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_19_pad_0 = const()[name = tensor<string, []>("value_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_4_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90355904)))];
            tensor<fp16, [512]> layers_4_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90880256)))];
            tensor<fp16, [1, 512, 1, 1500]> value_19_cast_fp16 = conv(bias = layers_4_encoder_attn_v_proj_bias_to_fp16, dilations = var_1076, groups = var_939, pad = value_19_pad_0, pad_type = value_19_pad_type_0, strides = var_1074, weight = layers_4_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_19_cast_fp16")];
            tensor<int32, [4]> var_1080 = const()[name = tensor<string, []>("op_1080"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_1081_cast_fp16 = reshape(shape = var_1080, x = query_19_cast_fp16)[name = tensor<string, []>("op_1081_cast_fp16")];
            tensor<fp16, []> var_1082_to_fp16 = const()[name = tensor<string, []>("op_1082_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_1083_cast_fp16 = mul(x = var_1081_cast_fp16, y = var_1082_to_fp16)[name = tensor<string, []>("op_1083_cast_fp16")];
            tensor<int32, [4]> var_1084 = const()[name = tensor<string, []>("op_1084"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_1085_cast_fp16 = reshape(shape = var_1084, x = key_19_cast_fp16)[name = tensor<string, []>("op_1085_cast_fp16")];
            tensor<bool, []> mh_w_29_transpose_x_0 = const()[name = tensor<string, []>("mh_w_29_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_29_transpose_y_0 = const()[name = tensor<string, []>("mh_w_29_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 1500]> mh_w_29_cast_fp16 = matmul(transpose_x = mh_w_29_transpose_x_0, transpose_y = mh_w_29_transpose_y_0, x = var_1083_cast_fp16, y = var_1085_cast_fp16)[name = tensor<string, []>("mh_w_29_cast_fp16")];
            tensor<fp16, [1, 8, 1, 1500]> obj_69_cast_fp16 = softmax(axis = var_932, x = mh_w_29_cast_fp16)[name = tensor<string, []>("obj_69_cast_fp16")];
            tensor<int32, [4]> var_1089 = const()[name = tensor<string, []>("op_1089"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_1090_cast_fp16 = reshape(shape = var_1089, x = value_19_cast_fp16)[name = tensor<string, []>("op_1090_cast_fp16")];
            tensor<bool, []> attn_19_transpose_x_0 = const()[name = tensor<string, []>("attn_19_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_19_transpose_y_0 = const()[name = tensor<string, []>("attn_19_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_19_cast_fp16 = matmul(transpose_x = attn_19_transpose_x_0, transpose_y = attn_19_transpose_y_0, x = var_1090_cast_fp16, y = obj_69_cast_fp16)[name = tensor<string, []>("attn_19_cast_fp16")];
            tensor<int32, [4]> var_1093 = const()[name = tensor<string, []>("op_1093"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_43_cast_fp16 = reshape(shape = var_1093, x = attn_19_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<int32, [2]> var_1097 = const()[name = tensor<string, []>("op_1097"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1099 = const()[name = tensor<string, []>("op_1099"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_67_pad_type_0 = const()[name = tensor<string, []>("obj_67_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_67_pad_0 = const()[name = tensor<string, []>("obj_67_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_4_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90881344)))];
            tensor<fp16, [512]> layers_4_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91405696)))];
            tensor<fp16, [1, 512, 1, 1]> obj_67_cast_fp16 = conv(bias = layers_4_encoder_attn_o_proj_bias_to_fp16, dilations = var_1099, groups = var_939, pad = obj_67_pad_0, pad_type = obj_67_pad_type_0, strides = var_1097, weight = layers_4_encoder_attn_o_proj_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("obj_67_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_29_cast_fp16 = add(x = inputs_27_cast_fp16, y = obj_67_cast_fp16)[name = tensor<string, []>("inputs_29_cast_fp16")];
            tensor<int32, [1]> var_1108 = const()[name = tensor<string, []>("op_1108"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_29_cast_fp16 = reduce_mean(axes = var_1108, keep_dims = var_940, x = inputs_29_cast_fp16)[name = tensor<string, []>("channels_mean_29_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_29_cast_fp16 = sub(x = inputs_29_cast_fp16, y = channels_mean_29_cast_fp16)[name = tensor<string, []>("zero_mean_29_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_29_cast_fp16 = mul(x = zero_mean_29_cast_fp16, y = zero_mean_29_cast_fp16)[name = tensor<string, []>("zero_mean_sq_29_cast_fp16")];
            tensor<int32, [1]> var_1112 = const()[name = tensor<string, []>("op_1112"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1113_cast_fp16 = reduce_mean(axes = var_1112, keep_dims = var_940, x = zero_mean_sq_29_cast_fp16)[name = tensor<string, []>("op_1113_cast_fp16")];
            tensor<fp16, []> var_1114_to_fp16 = const()[name = tensor<string, []>("op_1114_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1115_cast_fp16 = add(x = var_1113_cast_fp16, y = var_1114_to_fp16)[name = tensor<string, []>("op_1115_cast_fp16")];
            tensor<fp16, []> denom_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_29_cast_fp16 = rsqrt(epsilon = denom_29_epsilon_0_to_fp16, x = var_1115_cast_fp16)[name = tensor<string, []>("denom_29_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_29_cast_fp16 = mul(x = zero_mean_29_cast_fp16, y = denom_29_cast_fp16)[name = tensor<string, []>("out_29_cast_fp16")];
            tensor<fp16, [512]> input_45_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_45_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91406784)))];
            tensor<fp16, [512]> input_45_beta_0_to_fp16 = const()[name = tensor<string, []>("input_45_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91407872)))];
            tensor<fp16, []> input_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> input_45_cast_fp16 = batch_norm(beta = input_45_beta_0_to_fp16, epsilon = input_45_epsilon_0_to_fp16, gamma = input_45_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_29_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<int32, [2]> var_1126 = const()[name = tensor<string, []>("op_1126"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1128 = const()[name = tensor<string, []>("op_1128"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_47_pad_type_0 = const()[name = tensor<string, []>("input_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_47_pad_0 = const()[name = tensor<string, []>("input_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> layers_4_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_fc1_weight_to_fp16"), val = tensor<fp16, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91408960)))];
            tensor<fp16, [2048]> layers_4_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_fc1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93506176)))];
            tensor<fp16, [1, 2048, 1, 1]> input_47_cast_fp16 = conv(bias = layers_4_fc1_bias_to_fp16, dilations = var_1128, groups = var_939, pad = input_47_pad_0, pad_type = input_47_pad_type_0, strides = var_1126, weight = layers_4_fc1_weight_to_fp16, x = input_45_cast_fp16)[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<string, []> input_49_mode_0 = const()[name = tensor<string, []>("input_49_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 2048, 1, 1]> input_49_cast_fp16 = gelu(mode = input_49_mode_0, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<int32, [2]> var_1134 = const()[name = tensor<string, []>("op_1134"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1136 = const()[name = tensor<string, []>("op_1136"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_11_pad_type_0 = const()[name = tensor<string, []>("hidden_states_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_11_pad_0 = const()[name = tensor<string, []>("hidden_states_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> layers_4_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_fc2_weight_to_fp16"), val = tensor<fp16, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93510336)))];
            tensor<fp16, [512]> layers_4_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_fc2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(95607552)))];
            tensor<fp16, [1, 512, 1, 1]> hidden_states_11_cast_fp16 = conv(bias = layers_4_fc2_bias_to_fp16, dilations = var_1136, groups = var_939, pad = hidden_states_11_pad_0, pad_type = hidden_states_11_pad_type_0, strides = var_1134, weight = layers_4_fc2_weight_to_fp16, x = input_49_cast_fp16)[name = tensor<string, []>("hidden_states_11_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_31_cast_fp16 = add(x = inputs_29_cast_fp16, y = hidden_states_11_cast_fp16)[name = tensor<string, []>("inputs_31_cast_fp16")];
            tensor<int32, []> var_1150 = const()[name = tensor<string, []>("op_1150"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1157 = const()[name = tensor<string, []>("op_1157"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1158 = const()[name = tensor<string, []>("op_1158"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1170 = const()[name = tensor<string, []>("op_1170"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_31_cast_fp16 = reduce_mean(axes = var_1170, keep_dims = var_1158, x = inputs_31_cast_fp16)[name = tensor<string, []>("channels_mean_31_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_31_cast_fp16 = sub(x = inputs_31_cast_fp16, y = channels_mean_31_cast_fp16)[name = tensor<string, []>("zero_mean_31_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_31_cast_fp16 = mul(x = zero_mean_31_cast_fp16, y = zero_mean_31_cast_fp16)[name = tensor<string, []>("zero_mean_sq_31_cast_fp16")];
            tensor<int32, [1]> var_1174 = const()[name = tensor<string, []>("op_1174"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1175_cast_fp16 = reduce_mean(axes = var_1174, keep_dims = var_1158, x = zero_mean_sq_31_cast_fp16)[name = tensor<string, []>("op_1175_cast_fp16")];
            tensor<fp16, []> var_1176_to_fp16 = const()[name = tensor<string, []>("op_1176_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1177_cast_fp16 = add(x = var_1175_cast_fp16, y = var_1176_to_fp16)[name = tensor<string, []>("op_1177_cast_fp16")];
            tensor<fp16, []> denom_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_31_cast_fp16 = rsqrt(epsilon = denom_31_epsilon_0_to_fp16, x = var_1177_cast_fp16)[name = tensor<string, []>("denom_31_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_31_cast_fp16 = mul(x = zero_mean_31_cast_fp16, y = denom_31_cast_fp16)[name = tensor<string, []>("out_31_cast_fp16")];
            tensor<fp16, [512]> obj_71_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_71_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(95608640)))];
            tensor<fp16, [512]> obj_71_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_71_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(95609728)))];
            tensor<fp16, []> obj_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_71_cast_fp16 = batch_norm(beta = obj_71_beta_0_to_fp16, epsilon = obj_71_epsilon_0_to_fp16, gamma = obj_71_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_31_cast_fp16)[name = tensor<string, []>("obj_71_cast_fp16")];
            tensor<int32, [2]> var_1192 = const()[name = tensor<string, []>("op_1192"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1194 = const()[name = tensor<string, []>("op_1194"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_21_pad_type_0 = const()[name = tensor<string, []>("query_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_21_pad_0 = const()[name = tensor<string, []>("query_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_5_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(95610816)))];
            tensor<fp16, [512]> layers_5_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96135168)))];
            tensor<fp16, [1, 512, 1, 1]> query_21_cast_fp16 = conv(bias = layers_5_self_attn_q_proj_bias_to_fp16, dilations = var_1194, groups = var_1157, pad = query_21_pad_0, pad_type = query_21_pad_type_0, strides = var_1192, weight = layers_5_self_attn_q_proj_weight_to_fp16, x = obj_71_cast_fp16)[name = tensor<string, []>("query_21_cast_fp16")];
            tensor<int32, [2]> var_1198 = const()[name = tensor<string, []>("op_1198"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1200 = const()[name = tensor<string, []>("op_1200"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_pad_type_0 = const()[name = tensor<string, []>("current_key_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_pad_0 = const()[name = tensor<string, []>("current_key_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_5_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96136256)))];
            tensor<fp16, [1, 512, 1, 1]> current_key_cast_fp16 = conv(dilations = var_1200, groups = var_1157, pad = current_key_pad_0, pad_type = current_key_pad_type_0, strides = var_1198, weight = layers_5_self_attn_k_proj_weight_to_fp16, x = obj_71_cast_fp16)[name = tensor<string, []>("current_key_cast_fp16")];
            tensor<int32, [2]> var_1205 = const()[name = tensor<string, []>("op_1205"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1207 = const()[name = tensor<string, []>("op_1207"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_pad_type_0 = const()[name = tensor<string, []>("current_value_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_pad_0 = const()[name = tensor<string, []>("current_value_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_5_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96660608)))];
            tensor<fp16, [512]> layers_5_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97184960)))];
            tensor<fp16, [1, 512, 1, 1]> current_value_cast_fp16 = conv(bias = layers_5_self_attn_v_proj_bias_to_fp16, dilations = var_1207, groups = var_1157, pad = current_value_pad_0, pad_type = current_value_pad_type_0, strides = var_1205, weight = layers_5_self_attn_v_proj_weight_to_fp16, x = obj_71_cast_fp16)[name = tensor<string, []>("current_value_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_1214_cast_fp16 = mul(x = current_key_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_1214_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_1216_cast_fp16 = mul(x = var_51_cast_fp16_5, y = var_137_cast_fp16)[name = tensor<string, []>("op_1216_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> key_21_cast_fp16 = add(x = var_1214_cast_fp16, y = var_1216_cast_fp16)[name = tensor<string, []>("key_21_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_1218_cast_fp16 = mul(x = current_value_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("op_1218_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> var_1220_cast_fp16 = mul(x = var_60_cast_fp16_5, y = var_137_cast_fp16)[name = tensor<string, []>("op_1220_cast_fp16")];
            tensor<fp16, [1, 512, 1, 224]> value_21_cast_fp16 = add(x = var_1218_cast_fp16, y = var_1220_cast_fp16)[name = tensor<string, []>("value_21_cast_fp16")];
            tensor<int32, [4]> var_1223 = const()[name = tensor<string, []>("op_1223"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_1224_cast_fp16 = reshape(shape = var_1223, x = query_21_cast_fp16)[name = tensor<string, []>("op_1224_cast_fp16")];
            tensor<fp16, []> var_1225_to_fp16 = const()[name = tensor<string, []>("op_1225_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_1226_cast_fp16 = mul(x = var_1224_cast_fp16, y = var_1225_to_fp16)[name = tensor<string, []>("op_1226_cast_fp16")];
            tensor<int32, [4]> var_1227 = const()[name = tensor<string, []>("op_1227"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_1228_cast_fp16 = reshape(shape = var_1227, x = key_21_cast_fp16)[name = tensor<string, []>("op_1228_cast_fp16")];
            tensor<bool, []> mh_w_31_transpose_x_0 = const()[name = tensor<string, []>("mh_w_31_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_31_transpose_y_0 = const()[name = tensor<string, []>("mh_w_31_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 224]> mh_w_31_cast_fp16 = matmul(transpose_x = mh_w_31_transpose_x_0, transpose_y = mh_w_31_transpose_y_0, x = var_1226_cast_fp16, y = var_1228_cast_fp16)[name = tensor<string, []>("mh_w_31_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> mh_w_33_cast_fp16 = add(x = mh_w_31_cast_fp16, y = var_155_cast_fp16)[name = tensor<string, []>("mh_w_33_cast_fp16")];
            tensor<fp16, [1, 8, 1, 224]> var_1236_cast_fp16 = softmax(axis = var_1150, x = mh_w_33_cast_fp16)[name = tensor<string, []>("op_1236_cast_fp16")];
            tensor<int32, [4]> var_1237 = const()[name = tensor<string, []>("op_1237"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 224]> var_1238_cast_fp16 = reshape(shape = var_1237, x = value_21_cast_fp16)[name = tensor<string, []>("op_1238_cast_fp16")];
            tensor<bool, []> attn_21_transpose_x_0 = const()[name = tensor<string, []>("attn_21_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_21_transpose_y_0 = const()[name = tensor<string, []>("attn_21_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_21_cast_fp16 = matmul(transpose_x = attn_21_transpose_x_0, transpose_y = attn_21_transpose_y_0, x = var_1238_cast_fp16, y = var_1236_cast_fp16)[name = tensor<string, []>("attn_21_cast_fp16")];
            tensor<int32, [4]> var_1241 = const()[name = tensor<string, []>("op_1241"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_51_cast_fp16 = reshape(shape = var_1241, x = attn_21_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<int32, [2]> var_1245 = const()[name = tensor<string, []>("op_1245"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1247 = const()[name = tensor<string, []>("op_1247"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_77_pad_type_0 = const()[name = tensor<string, []>("obj_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_77_pad_0 = const()[name = tensor<string, []>("obj_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_5_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97186048)))];
            tensor<fp16, [512]> layers_5_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97710400)))];
            tensor<fp16, [1, 512, 1, 1]> obj_77_cast_fp16 = conv(bias = layers_5_self_attn_o_proj_bias_to_fp16, dilations = var_1247, groups = var_1157, pad = obj_77_pad_0, pad_type = obj_77_pad_type_0, strides = var_1245, weight = layers_5_self_attn_o_proj_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("obj_77_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_33_cast_fp16 = add(x = inputs_31_cast_fp16, y = obj_77_cast_fp16)[name = tensor<string, []>("inputs_33_cast_fp16")];
            tensor<int32, [1]> var_1257 = const()[name = tensor<string, []>("op_1257"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_33_cast_fp16 = reduce_mean(axes = var_1257, keep_dims = var_1158, x = inputs_33_cast_fp16)[name = tensor<string, []>("channels_mean_33_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_33_cast_fp16 = sub(x = inputs_33_cast_fp16, y = channels_mean_33_cast_fp16)[name = tensor<string, []>("zero_mean_33_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_33_cast_fp16 = mul(x = zero_mean_33_cast_fp16, y = zero_mean_33_cast_fp16)[name = tensor<string, []>("zero_mean_sq_33_cast_fp16")];
            tensor<int32, [1]> var_1261 = const()[name = tensor<string, []>("op_1261"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1262_cast_fp16 = reduce_mean(axes = var_1261, keep_dims = var_1158, x = zero_mean_sq_33_cast_fp16)[name = tensor<string, []>("op_1262_cast_fp16")];
            tensor<fp16, []> var_1263_to_fp16 = const()[name = tensor<string, []>("op_1263_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1264_cast_fp16 = add(x = var_1262_cast_fp16, y = var_1263_to_fp16)[name = tensor<string, []>("op_1264_cast_fp16")];
            tensor<fp16, []> denom_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_33_cast_fp16 = rsqrt(epsilon = denom_33_epsilon_0_to_fp16, x = var_1264_cast_fp16)[name = tensor<string, []>("denom_33_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_33_cast_fp16 = mul(x = zero_mean_33_cast_fp16, y = denom_33_cast_fp16)[name = tensor<string, []>("out_33_cast_fp16")];
            tensor<fp16, [512]> obj_79_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_79_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97711488)))];
            tensor<fp16, [512]> obj_79_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_79_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97712576)))];
            tensor<fp16, []> obj_79_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_79_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> obj_79_cast_fp16 = batch_norm(beta = obj_79_beta_0_to_fp16, epsilon = obj_79_epsilon_0_to_fp16, gamma = obj_79_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_33_cast_fp16)[name = tensor<string, []>("obj_79_cast_fp16")];
            tensor<int32, [2]> var_1279 = const()[name = tensor<string, []>("op_1279"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1281 = const()[name = tensor<string, []>("op_1281"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_pad_type_0 = const()[name = tensor<string, []>("query_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_pad_0 = const()[name = tensor<string, []>("query_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_5_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97713664)))];
            tensor<fp16, [512]> layers_5_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98238016)))];
            tensor<fp16, [1, 512, 1, 1]> query_cast_fp16 = conv(bias = layers_5_encoder_attn_q_proj_bias_to_fp16, dilations = var_1281, groups = var_1157, pad = query_pad_0, pad_type = query_pad_type_0, strides = var_1279, weight = layers_5_encoder_attn_q_proj_weight_to_fp16, x = obj_79_cast_fp16)[name = tensor<string, []>("query_cast_fp16")];
            tensor<int32, [2]> var_1285 = const()[name = tensor<string, []>("op_1285"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1287 = const()[name = tensor<string, []>("op_1287"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_pad_type_0 = const()[name = tensor<string, []>("key_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_pad_0 = const()[name = tensor<string, []>("key_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_5_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98239104)))];
            tensor<fp16, [1, 512, 1, 1500]> key_cast_fp16 = conv(dilations = var_1287, groups = var_1157, pad = key_pad_0, pad_type = key_pad_type_0, strides = var_1285, weight = layers_5_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_cast_fp16")];
            tensor<int32, [2]> var_1292 = const()[name = tensor<string, []>("op_1292"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1294 = const()[name = tensor<string, []>("op_1294"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_pad_type_0 = const()[name = tensor<string, []>("value_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_pad_0 = const()[name = tensor<string, []>("value_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_5_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98763456)))];
            tensor<fp16, [512]> layers_5_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99287808)))];
            tensor<fp16, [1, 512, 1, 1500]> value_cast_fp16 = conv(bias = layers_5_encoder_attn_v_proj_bias_to_fp16, dilations = var_1294, groups = var_1157, pad = value_pad_0, pad_type = value_pad_type_0, strides = var_1292, weight = layers_5_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_cast_fp16")];
            tensor<int32, [4]> var_1298 = const()[name = tensor<string, []>("op_1298"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1]> var_1299_cast_fp16 = reshape(shape = var_1298, x = query_cast_fp16)[name = tensor<string, []>("op_1299_cast_fp16")];
            tensor<fp16, []> var_1300_to_fp16 = const()[name = tensor<string, []>("op_1300_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 8, 64, 1]> var_1301_cast_fp16 = mul(x = var_1299_cast_fp16, y = var_1300_to_fp16)[name = tensor<string, []>("op_1301_cast_fp16")];
            tensor<int32, [4]> var_1302 = const()[name = tensor<string, []>("op_1302"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_1303_cast_fp16 = reshape(shape = var_1302, x = key_cast_fp16)[name = tensor<string, []>("op_1303_cast_fp16")];
            tensor<bool, []> mh_w_transpose_x_0 = const()[name = tensor<string, []>("mh_w_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_transpose_y_0 = const()[name = tensor<string, []>("mh_w_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1, 1500]> mh_w_cast_fp16 = matmul(transpose_x = mh_w_transpose_x_0, transpose_y = mh_w_transpose_y_0, x = var_1301_cast_fp16, y = var_1303_cast_fp16)[name = tensor<string, []>("mh_w_cast_fp16")];
            tensor<fp16, [1, 8, 1, 1500]> obj_83_cast_fp16 = softmax(axis = var_1150, x = mh_w_cast_fp16)[name = tensor<string, []>("obj_83_cast_fp16")];
            tensor<int32, [4]> var_1307 = const()[name = tensor<string, []>("op_1307"), val = tensor<int32, [4]>([1, 8, 64, -1])];
            tensor<fp16, [1, 8, 64, 1500]> var_1308_cast_fp16 = reshape(shape = var_1307, x = value_cast_fp16)[name = tensor<string, []>("op_1308_cast_fp16")];
            tensor<bool, []> attn_transpose_x_0 = const()[name = tensor<string, []>("attn_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_transpose_y_0 = const()[name = tensor<string, []>("attn_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 8, 64, 1]> attn_cast_fp16 = matmul(transpose_x = attn_transpose_x_0, transpose_y = attn_transpose_y_0, x = var_1308_cast_fp16, y = obj_83_cast_fp16)[name = tensor<string, []>("attn_cast_fp16")];
            tensor<int32, [4]> var_1311 = const()[name = tensor<string, []>("op_1311"), val = tensor<int32, [4]>([1, 512, 1, -1])];
            tensor<fp16, [1, 512, 1, 1]> input_53_cast_fp16 = reshape(shape = var_1311, x = attn_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<int32, [2]> var_1315 = const()[name = tensor<string, []>("op_1315"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1317 = const()[name = tensor<string, []>("op_1317"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_81_pad_type_0 = const()[name = tensor<string, []>("obj_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_81_pad_0 = const()[name = tensor<string, []>("obj_81_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> layers_5_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99288896)))];
            tensor<fp16, [512]> layers_5_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99813248)))];
            tensor<fp16, [1, 512, 1, 1]> obj_81_cast_fp16 = conv(bias = layers_5_encoder_attn_o_proj_bias_to_fp16, dilations = var_1317, groups = var_1157, pad = obj_81_pad_0, pad_type = obj_81_pad_type_0, strides = var_1315, weight = layers_5_encoder_attn_o_proj_weight_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("obj_81_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_35_cast_fp16 = add(x = inputs_33_cast_fp16, y = obj_81_cast_fp16)[name = tensor<string, []>("inputs_35_cast_fp16")];
            tensor<int32, [1]> var_1326 = const()[name = tensor<string, []>("op_1326"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_35_cast_fp16 = reduce_mean(axes = var_1326, keep_dims = var_1158, x = inputs_35_cast_fp16)[name = tensor<string, []>("channels_mean_35_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_35_cast_fp16 = sub(x = inputs_35_cast_fp16, y = channels_mean_35_cast_fp16)[name = tensor<string, []>("zero_mean_35_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_35_cast_fp16 = mul(x = zero_mean_35_cast_fp16, y = zero_mean_35_cast_fp16)[name = tensor<string, []>("zero_mean_sq_35_cast_fp16")];
            tensor<int32, [1]> var_1330 = const()[name = tensor<string, []>("op_1330"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1331_cast_fp16 = reduce_mean(axes = var_1330, keep_dims = var_1158, x = zero_mean_sq_35_cast_fp16)[name = tensor<string, []>("op_1331_cast_fp16")];
            tensor<fp16, []> var_1332_to_fp16 = const()[name = tensor<string, []>("op_1332_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1333_cast_fp16 = add(x = var_1331_cast_fp16, y = var_1332_to_fp16)[name = tensor<string, []>("op_1333_cast_fp16")];
            tensor<fp16, []> denom_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_35_cast_fp16 = rsqrt(epsilon = denom_35_epsilon_0_to_fp16, x = var_1333_cast_fp16)[name = tensor<string, []>("denom_35_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_35_cast_fp16 = mul(x = zero_mean_35_cast_fp16, y = denom_35_cast_fp16)[name = tensor<string, []>("out_35_cast_fp16")];
            tensor<fp16, [512]> input_55_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_55_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99814336)))];
            tensor<fp16, [512]> input_55_beta_0_to_fp16 = const()[name = tensor<string, []>("input_55_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99815424)))];
            tensor<fp16, []> input_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> input_55_cast_fp16 = batch_norm(beta = input_55_beta_0_to_fp16, epsilon = input_55_epsilon_0_to_fp16, gamma = input_55_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_35_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<int32, [2]> var_1344 = const()[name = tensor<string, []>("op_1344"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1346 = const()[name = tensor<string, []>("op_1346"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> layers_5_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_fc1_weight_to_fp16"), val = tensor<fp16, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99816512)))];
            tensor<fp16, [2048]> layers_5_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_fc1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(101913728)))];
            tensor<fp16, [1, 2048, 1, 1]> input_57_cast_fp16 = conv(bias = layers_5_fc1_bias_to_fp16, dilations = var_1346, groups = var_1157, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_1344, weight = layers_5_fc1_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<string, []> input_mode_0 = const()[name = tensor<string, []>("input_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 2048, 1, 1]> input_cast_fp16 = gelu(mode = input_mode_0, x = input_57_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_1352 = const()[name = tensor<string, []>("op_1352"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1354 = const()[name = tensor<string, []>("op_1354"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_13_pad_type_0 = const()[name = tensor<string, []>("hidden_states_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_13_pad_0 = const()[name = tensor<string, []>("hidden_states_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> layers_5_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_fc2_weight_to_fp16"), val = tensor<fp16, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(101917888)))];
            tensor<fp16, [512]> layers_5_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_fc2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(104015104)))];
            tensor<fp16, [1, 512, 1, 1]> hidden_states_13_cast_fp16 = conv(bias = layers_5_fc2_bias_to_fp16, dilations = var_1354, groups = var_1157, pad = hidden_states_13_pad_0, pad_type = hidden_states_13_pad_type_0, strides = var_1352, weight = layers_5_fc2_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("hidden_states_13_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> inputs_cast_fp16 = add(x = inputs_35_cast_fp16, y = hidden_states_13_cast_fp16)[name = tensor<string, []>("inputs_cast_fp16")];
            tensor<bool, []> var_1365 = const()[name = tensor<string, []>("op_1365"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1369 = const()[name = tensor<string, []>("op_1369"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_cast_fp16 = reduce_mean(axes = var_1369, keep_dims = var_1365, x = inputs_cast_fp16)[name = tensor<string, []>("channels_mean_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_cast_fp16 = sub(x = inputs_cast_fp16, y = channels_mean_cast_fp16)[name = tensor<string, []>("zero_mean_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> zero_mean_sq_cast_fp16 = mul(x = zero_mean_cast_fp16, y = zero_mean_cast_fp16)[name = tensor<string, []>("zero_mean_sq_cast_fp16")];
            tensor<int32, [1]> var_1373 = const()[name = tensor<string, []>("op_1373"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1374_cast_fp16 = reduce_mean(axes = var_1373, keep_dims = var_1365, x = zero_mean_sq_cast_fp16)[name = tensor<string, []>("op_1374_cast_fp16")];
            tensor<fp16, []> var_1375_to_fp16 = const()[name = tensor<string, []>("op_1375_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1376_cast_fp16 = add(x = var_1374_cast_fp16, y = var_1375_to_fp16)[name = tensor<string, []>("op_1376_cast_fp16")];
            tensor<fp16, []> denom_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_cast_fp16 = rsqrt(epsilon = denom_epsilon_0_to_fp16, x = var_1376_cast_fp16)[name = tensor<string, []>("denom_cast_fp16")];
            tensor<fp16, [1, 512, 1, 1]> out_cast_fp16 = mul(x = zero_mean_cast_fp16, y = denom_cast_fp16)[name = tensor<string, []>("out_cast_fp16")];
            tensor<fp16, [512]> hidden_states_gamma_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(104016192)))];
            tensor<fp16, [512]> hidden_states_beta_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(104017280)))];
            tensor<fp16, []> hidden_states_epsilon_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 1, 1]> hidden_states_cast_fp16 = batch_norm(beta = hidden_states_beta_0_to_fp16, epsilon = hidden_states_epsilon_0_to_fp16, gamma = hidden_states_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_cast_fp16)[name = tensor<string, []>("hidden_states_cast_fp16")];
            tensor<int32, [1]> var_1386_axes_0 = const()[name = tensor<string, []>("op_1386_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 512, 1]> var_1386_cast_fp16 = squeeze(axes = var_1386_axes_0, x = hidden_states_cast_fp16)[name = tensor<string, []>("op_1386_cast_fp16")];
            tensor<int32, [3]> var_1389_perm_0 = const()[name = tensor<string, []>("op_1389_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<fp16, [51865]> linear_0_bias_0_to_fp16 = const()[name = tensor<string, []>("linear_0_bias_0_to_fp16"), val = tensor<fp16, [51865]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(104018368)))];
            tensor<fp16, [1, 1, 512]> transpose_0 = transpose(perm = var_1389_perm_0, x = var_1386_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [1, 1, 51865]> logits = linear(bias = linear_0_bias_0_to_fp16, weight = embed_tokens_weight_to_fp16, x = transpose_0)[name = tensor<string, []>("linear_0_cast_fp16")];
            tensor<int32, []> var_1393 = const()[name = tensor<string, []>("op_1393"), val = tensor<int32, []>(1)];
            tensor<bool, []> obj_87_interleave_0 = const()[name = tensor<string, []>("obj_87_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 3072, 1, 1]> key_cache_updates = concat(axis = var_1393, interleave = obj_87_interleave_0, values = (current_key_1_cast_fp16, current_key_3_cast_fp16, current_key_5_cast_fp16, current_key_7_cast_fp16, current_key_9_cast_fp16, current_key_cast_fp16))[name = tensor<string, []>("obj_87_cast_fp16")];
            tensor<int32, []> var_1396 = const()[name = tensor<string, []>("op_1396"), val = tensor<int32, []>(1)];
            tensor<bool, []> obj_89_interleave_0 = const()[name = tensor<string, []>("obj_89_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 3072, 1, 1]> value_cache_updates = concat(axis = var_1396, interleave = obj_89_interleave_0, values = (current_value_1_cast_fp16, current_value_3_cast_fp16, current_value_5_cast_fp16, current_value_7_cast_fp16, current_value_9_cast_fp16, current_value_cast_fp16))[name = tensor<string, []>("obj_89_cast_fp16")];
            tensor<int32, [4]> var_1407_begin_0 = const()[name = tensor<string, []>("op_1407_begin_0"), val = tensor<int32, [4]>([0, 1, 0, 0])];
            tensor<int32, [4]> var_1407_end_0 = const()[name = tensor<string, []>("op_1407_end_0"), val = tensor<int32, [4]>([1, 2, 1, 1500])];
            tensor<bool, [4]> var_1407_end_mask_0 = const()[name = tensor<string, []>("op_1407_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1407_cast_fp16 = slice_by_index(begin = var_1407_begin_0, end = var_1407_end_0, end_mask = var_1407_end_mask_0, x = obj_55_cast_fp16)[name = tensor<string, []>("op_1407_cast_fp16")];
            tensor<int32, [4]> var_1410_begin_0 = const()[name = tensor<string, []>("op_1410_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1410_end_0 = const()[name = tensor<string, []>("op_1410_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1410_end_mask_0 = const()[name = tensor<string, []>("op_1410_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1410_squeeze_mask_0 = const()[name = tensor<string, []>("op_1410_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1410_cast_fp16 = slice_by_index(begin = var_1410_begin_0, end = var_1410_end_0, end_mask = var_1410_end_mask_0, squeeze_mask = var_1410_squeeze_mask_0, x = var_1407_cast_fp16)[name = tensor<string, []>("op_1410_cast_fp16")];
            tensor<int32, [4]> var_1425_begin_0 = const()[name = tensor<string, []>("op_1425_begin_0"), val = tensor<int32, [4]>([0, 2, 0, 0])];
            tensor<int32, [4]> var_1425_end_0 = const()[name = tensor<string, []>("op_1425_end_0"), val = tensor<int32, [4]>([1, 3, 1, 1500])];
            tensor<bool, [4]> var_1425_end_mask_0 = const()[name = tensor<string, []>("op_1425_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1425_cast_fp16 = slice_by_index(begin = var_1425_begin_0, end = var_1425_end_0, end_mask = var_1425_end_mask_0, x = obj_69_cast_fp16)[name = tensor<string, []>("op_1425_cast_fp16")];
            tensor<int32, [4]> var_1428_begin_0 = const()[name = tensor<string, []>("op_1428_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1428_end_0 = const()[name = tensor<string, []>("op_1428_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1428_end_mask_0 = const()[name = tensor<string, []>("op_1428_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1428_squeeze_mask_0 = const()[name = tensor<string, []>("op_1428_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1428_cast_fp16 = slice_by_index(begin = var_1428_begin_0, end = var_1428_end_0, end_mask = var_1428_end_mask_0, squeeze_mask = var_1428_squeeze_mask_0, x = var_1425_cast_fp16)[name = tensor<string, []>("op_1428_cast_fp16")];
            tensor<int32, [4]> var_1443_begin_0 = const()[name = tensor<string, []>("op_1443_begin_0"), val = tensor<int32, [4]>([0, 3, 0, 0])];
            tensor<int32, [4]> var_1443_end_0 = const()[name = tensor<string, []>("op_1443_end_0"), val = tensor<int32, [4]>([1, 4, 1, 1500])];
            tensor<bool, [4]> var_1443_end_mask_0 = const()[name = tensor<string, []>("op_1443_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1443_cast_fp16 = slice_by_index(begin = var_1443_begin_0, end = var_1443_end_0, end_mask = var_1443_end_mask_0, x = obj_69_cast_fp16)[name = tensor<string, []>("op_1443_cast_fp16")];
            tensor<int32, [4]> var_1446_begin_0 = const()[name = tensor<string, []>("op_1446_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1446_end_0 = const()[name = tensor<string, []>("op_1446_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1446_end_mask_0 = const()[name = tensor<string, []>("op_1446_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1446_squeeze_mask_0 = const()[name = tensor<string, []>("op_1446_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1446_cast_fp16 = slice_by_index(begin = var_1446_begin_0, end = var_1446_end_0, end_mask = var_1446_end_mask_0, squeeze_mask = var_1446_squeeze_mask_0, x = var_1443_cast_fp16)[name = tensor<string, []>("op_1446_cast_fp16")];
            tensor<int32, [4]> var_1461_begin_0 = const()[name = tensor<string, []>("op_1461_begin_0"), val = tensor<int32, [4]>([0, 7, 0, 0])];
            tensor<int32, [4]> var_1461_end_0 = const()[name = tensor<string, []>("op_1461_end_0"), val = tensor<int32, [4]>([1, 8, 1, 1500])];
            tensor<bool, [4]> var_1461_end_mask_0 = const()[name = tensor<string, []>("op_1461_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1461_cast_fp16 = slice_by_index(begin = var_1461_begin_0, end = var_1461_end_0, end_mask = var_1461_end_mask_0, x = obj_69_cast_fp16)[name = tensor<string, []>("op_1461_cast_fp16")];
            tensor<int32, [4]> var_1464_begin_0 = const()[name = tensor<string, []>("op_1464_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1464_end_0 = const()[name = tensor<string, []>("op_1464_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1464_end_mask_0 = const()[name = tensor<string, []>("op_1464_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1464_squeeze_mask_0 = const()[name = tensor<string, []>("op_1464_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1464_cast_fp16 = slice_by_index(begin = var_1464_begin_0, end = var_1464_end_0, end_mask = var_1464_end_mask_0, squeeze_mask = var_1464_squeeze_mask_0, x = var_1461_cast_fp16)[name = tensor<string, []>("op_1464_cast_fp16")];
            tensor<int32, [4]> var_1479_begin_0 = const()[name = tensor<string, []>("op_1479_begin_0"), val = tensor<int32, [4]>([0, 1, 0, 0])];
            tensor<int32, [4]> var_1479_end_0 = const()[name = tensor<string, []>("op_1479_end_0"), val = tensor<int32, [4]>([1, 2, 1, 1500])];
            tensor<bool, [4]> var_1479_end_mask_0 = const()[name = tensor<string, []>("op_1479_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1479_cast_fp16 = slice_by_index(begin = var_1479_begin_0, end = var_1479_end_0, end_mask = var_1479_end_mask_0, x = obj_83_cast_fp16)[name = tensor<string, []>("op_1479_cast_fp16")];
            tensor<int32, [4]> var_1482_begin_0 = const()[name = tensor<string, []>("op_1482_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1482_end_0 = const()[name = tensor<string, []>("op_1482_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1482_end_mask_0 = const()[name = tensor<string, []>("op_1482_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1482_squeeze_mask_0 = const()[name = tensor<string, []>("op_1482_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1482_cast_fp16 = slice_by_index(begin = var_1482_begin_0, end = var_1482_end_0, end_mask = var_1482_end_mask_0, squeeze_mask = var_1482_squeeze_mask_0, x = var_1479_cast_fp16)[name = tensor<string, []>("op_1482_cast_fp16")];
            tensor<int32, [4]> var_1497_begin_0 = const()[name = tensor<string, []>("op_1497_begin_0"), val = tensor<int32, [4]>([0, 2, 0, 0])];
            tensor<int32, [4]> var_1497_end_0 = const()[name = tensor<string, []>("op_1497_end_0"), val = tensor<int32, [4]>([1, 3, 1, 1500])];
            tensor<bool, [4]> var_1497_end_mask_0 = const()[name = tensor<string, []>("op_1497_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1497_cast_fp16 = slice_by_index(begin = var_1497_begin_0, end = var_1497_end_0, end_mask = var_1497_end_mask_0, x = obj_83_cast_fp16)[name = tensor<string, []>("op_1497_cast_fp16")];
            tensor<int32, [4]> var_1500_begin_0 = const()[name = tensor<string, []>("op_1500_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1500_end_0 = const()[name = tensor<string, []>("op_1500_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1500_end_mask_0 = const()[name = tensor<string, []>("op_1500_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1500_squeeze_mask_0 = const()[name = tensor<string, []>("op_1500_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1500_cast_fp16 = slice_by_index(begin = var_1500_begin_0, end = var_1500_end_0, end_mask = var_1500_end_mask_0, squeeze_mask = var_1500_squeeze_mask_0, x = var_1497_cast_fp16)[name = tensor<string, []>("op_1500_cast_fp16")];
            tensor<int32, [4]> var_1515_begin_0 = const()[name = tensor<string, []>("op_1515_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_1515_end_0 = const()[name = tensor<string, []>("op_1515_end_0"), val = tensor<int32, [4]>([1, 5, 1, 1500])];
            tensor<bool, [4]> var_1515_end_mask_0 = const()[name = tensor<string, []>("op_1515_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1515_cast_fp16 = slice_by_index(begin = var_1515_begin_0, end = var_1515_end_0, end_mask = var_1515_end_mask_0, x = obj_83_cast_fp16)[name = tensor<string, []>("op_1515_cast_fp16")];
            tensor<int32, [4]> var_1518_begin_0 = const()[name = tensor<string, []>("op_1518_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1518_end_0 = const()[name = tensor<string, []>("op_1518_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1518_end_mask_0 = const()[name = tensor<string, []>("op_1518_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1518_squeeze_mask_0 = const()[name = tensor<string, []>("op_1518_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1518_cast_fp16 = slice_by_index(begin = var_1518_begin_0, end = var_1518_end_0, end_mask = var_1518_end_mask_0, squeeze_mask = var_1518_squeeze_mask_0, x = var_1515_cast_fp16)[name = tensor<string, []>("op_1518_cast_fp16")];
            tensor<int32, [4]> var_1533_begin_0 = const()[name = tensor<string, []>("op_1533_begin_0"), val = tensor<int32, [4]>([0, 6, 0, 0])];
            tensor<int32, [4]> var_1533_end_0 = const()[name = tensor<string, []>("op_1533_end_0"), val = tensor<int32, [4]>([1, 7, 1, 1500])];
            tensor<bool, [4]> var_1533_end_mask_0 = const()[name = tensor<string, []>("op_1533_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1533_cast_fp16 = slice_by_index(begin = var_1533_begin_0, end = var_1533_end_0, end_mask = var_1533_end_mask_0, x = obj_83_cast_fp16)[name = tensor<string, []>("op_1533_cast_fp16")];
            tensor<int32, [4]> var_1536_begin_0 = const()[name = tensor<string, []>("op_1536_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1536_end_0 = const()[name = tensor<string, []>("op_1536_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1536_end_mask_0 = const()[name = tensor<string, []>("op_1536_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1536_squeeze_mask_0 = const()[name = tensor<string, []>("op_1536_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1536_cast_fp16 = slice_by_index(begin = var_1536_begin_0, end = var_1536_end_0, end_mask = var_1536_end_mask_0, squeeze_mask = var_1536_squeeze_mask_0, x = var_1533_cast_fp16)[name = tensor<string, []>("op_1536_cast_fp16")];
            tensor<int32, []> var_1543 = const()[name = tensor<string, []>("op_1543"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1544_interleave_0 = const()[name = tensor<string, []>("op_1544_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 8, 1500]> var_1544_cast_fp16 = concat(axis = var_1543, interleave = var_1544_interleave_0, values = (var_1410_cast_fp16, var_1428_cast_fp16, var_1446_cast_fp16, var_1464_cast_fp16, var_1482_cast_fp16, var_1500_cast_fp16, var_1518_cast_fp16, var_1536_cast_fp16))[name = tensor<string, []>("op_1544_cast_fp16")];
            tensor<int32, [1]> var_1546 = const()[name = tensor<string, []>("op_1546"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_1547 = const()[name = tensor<string, []>("op_1547"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1500]> alignment_heads_weights = reduce_mean(axes = var_1546, keep_dims = var_1547, x = var_1544_cast_fp16)[name = tensor<string, []>("obj_cast_fp16")];
        } -> (logits, key_cache_updates, value_cache_updates, alignment_heads_weights);
}